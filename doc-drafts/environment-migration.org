We're going to try to use this package to simulate the migration of an
environment. A full migration should have these steps:

1. Initial material setup and verification
2. Pre-migration sync
3. Soft-switch
4. Clean-halt
5. New sequencer
6. Full switch over


This test is just a simulation, so we'll skip the pre-migration sync
where we would get a clean copy of the state db, bridge db, and DAC
db.

- Rollup https://sepolia.etherscan.io/address/0x025a2916663273d21F102d2F9f8bace92534E56A
- Rollup Manager https://sepolia.etherscan.io/address/0x6084F261c8b9D4339e4C0a2FB6E886fAd1fF0259

The current sequencer is ~0xb60D3C495c9b90524e4b511bC54f374aB4ad216A~
and the current admin is ~0x17C8c765f260e146673f90B11C7fbBC76AE6E35A~.

Let's first rotate the admin key

#+begin_src bash :exports both verbatim :results output code
cast wallet new
#+end_src

#+RESULTS:
#+begin_src bash
Successfully created new keypair.
Address:     0x136e406BCD6Ea0932A4f543E9ED52567BD49E39D
Private key: 0xfb0f464c1a3677322b8da811ef6a3fc78f329d49dce1e8fb37d54dcc8e6edf73
#+end_src


We've got a new wallet to use as our admin. Let's try to udpate the
admin for our rollup?

#+begin_src bash :exports both verbatim :results output code
old_admin_pkey="0x8790fa937488a93936cafa62d38ac9e89e381b48c693a5af9c3a7c7aa2846299"
new_admin_addr="0x136e406BCD6Ea0932A4f543E9ED52567BD49E39D"
cast send --rpc-url https://eth-sepolia.public.blastapi.io --private-key $old_admin_pkey 0x025a2916663273d21F102d2F9f8bace92534E56A 'transferAdminRole(address)' $new_admin_addr
#+end_src

#+RESULTS:
#+begin_src bash

blockHash               0xc37abcdf292769bb9a2e3a291f945a1a2fb0b3e88fc92541f709b7c6432240eb
blockNumber             6120752
contractAddress         
cumulativeGasUsed       144622
effectiveGasPrice       3000851300
from                    0x17C8c765f260e146673f90B11C7fbBC76AE6E35A
gasUsed                 52099
logs                    [{"address":"0x025a2916663273d21f102d2f9f8bace92534e56a","topics":["0xa5b56b7906fd0a20e3f35120dd8343db1e12e037a6c90111c7e42885e82a1ce6"],"data":"0x000000000000000000000000136e406bcd6ea0932a4f543e9ed52567bd49e39d","blockHash":"0xc37abcdf292769bb9a2e3a291f945a1a2fb0b3e88fc92541f709b7c6432240eb","blockNumber":"0x5d6530","transactionHash":"0x588a18f61646feaf9741325d21fa39959bb8fd9c343960ae46d72d5eecc436fa","transactionIndex":"0x2","logIndex":"0x2","removed":false}]
logsBloom               0x
root                    
status                  1
transactionHash         0x588a18f61646feaf9741325d21fa39959bb8fd9c343960ae46d72d5eecc436fa
transactionIndex        2
type                    2
to                      0x025a2916663273d21F102d2F9f8bace92534E56A
#+end_src

That [[https://sepolia.etherscan.io/tx/0x588a18f61646feaf9741325d21fa39959bb8fd9c343960ae46d72d5eecc436fa][transaction]] worked, it looks like we have a new pending admin. I
need to make a second call now to accept the admin role using the new
wallet. Before we do that we should move all of the funds from the old
admin to the new one.

#+begin_src bash :exports both verbatim :results output code
addr="0x17C8c765f260e146673f90B11C7fbBC76AE6E35A"
old_admin_pkey="0x8790fa937488a93936cafa62d38ac9e89e381b48c693a5af9c3a7c7aa2846299"
new_admin_addr="0x136e406BCD6Ea0932A4f543E9ED52567BD49E39D"
rpc_url="https://eth-sepolia.public.blastapi.io"
tot_wei=$(cast balance --rpc-url $rpc_url $addr)
gas_price=$(cast gas-price --rpc-url $rpc_url)
gas_price=$(bc <<< "$gas_price * 2")
cast send --value $(bc <<< "$tot_wei - $gas_price * 21000") --gas-price $gas_price --rpc-url $rpc_url --private-key $old_admin_pkey $new_admin_addr
#+end_src

#+RESULTS:
#+begin_src bash

blockHash               0x27e49e4ecb4109cf86a4882231dbd1f460253f529b537d011714caf29ca8d32b
blockNumber             6120781
contractAddress         
cumulativeGasUsed       957199
effectiveGasPrice       2001643134
from                    0x17C8c765f260e146673f90B11C7fbBC76AE6E35A
gasUsed                 21000
logs                    []
logsBloom               0x
root                    
status                  1
transactionHash         0xf1f40138bf9d18b3986eb158e893060b0c09c3408a1b59ce70e72c124f65ae98
transactionIndex        8
type                    2
to                      0x136e406BCD6Ea0932A4f543E9ED52567BD49E39D
#+end_src


Okay the new account should have all of the funds from the old admin
now. Let's try to accept the admin role.

#+begin_src bash :exports both verbatim :results output code
new_admin_pkey="0xfb0f464c1a3677322b8da811ef6a3fc78f329d49dce1e8fb37d54dcc8e6edf73"
cast send --rpc-url https://eth-sepolia.public.blastapi.io --private-key $new_admin_pkey 0x025a2916663273d21F102d2F9f8bace92534E56A 'acceptAdminRole()'
#+end_src

#+RESULTS:
#+begin_src bash

blockHash               0x832424242e6b550db6ad71bc78de63f5d3946dbc8218383e5a06379b7d98bc04
blockNumber             6120784
contractAddress         
cumulativeGasUsed       328864
effectiveGasPrice       3000903762
from                    0x136e406BCD6Ea0932A4f543E9ED52567BD49E39D
gasUsed                 34582
logs                    [{"address":"0x025a2916663273d21f102d2f9f8bace92534e56a","topics":["0x056dc487bbf0795d0bbb1b4f0af523a855503cff740bfb4d5475f7a90c091e8e"],"data":"0x000000000000000000000000136e406bcd6ea0932a4f543e9ed52567bd49e39d","blockHash":"0x832424242e6b550db6ad71bc78de63f5d3946dbc8218383e5a06379b7d98bc04","blockNumber":"0x5d6550","transactionHash":"0x7813fc66d9e76b7900c15e7369234eaa8e4737e538b465ac78712e885084f74c","transactionIndex":"0x7","logIndex":"0x3","removed":false}]
logsBloom               0x
root                    
status                  1
transactionHash         0x7813fc66d9e76b7900c15e7369234eaa8e4737e538b465ac78712e885084f74c
transactionIndex        7
type                    2
to                      0x025a2916663273d21F102d2F9f8bace92534E56A
#+end_src


Alright, our rollup has a new admin now. We'll also need to transfer
ownership of the dac.

#+begin_src bash :exports both verbatim :results output code
old_admin_pkey="0x8790fa937488a93936cafa62d38ac9e89e381b48c693a5af9c3a7c7aa2846299"
new_admin_addr="0x136e406BCD6Ea0932A4f543E9ED52567BD49E39D"
cast send --rpc-url https://eth-sepolia.public.blastapi.io --private-key $old_admin_pkey 0x0869B6765f2f586e5391DafBB264a8E02786d4Ae 'transferOwnership(address)' $new_admin_addr
#+end_src

#+RESULTS:
#+begin_src bash

blockHash               0x49d02c25d3a437d307422d6ee8c74c253da6365b95b51bc31e6c508692b301f2
blockNumber             6120882
contractAddress         
cumulativeGasUsed       205979
effectiveGasPrice       3002741895
from                    0x17C8c765f260e146673f90B11C7fbBC76AE6E35A
gasUsed                 35690
logs                    [{"address":"0x0869b6765f2f586e5391dafbb264a8e02786d4ae","topics":["0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","0x00000000000000000000000017c8c765f260e146673f90b11c7fbbc76ae6e35a","0x000000000000000000000000136e406bcd6ea0932a4f543e9ed52567bd49e39d"],"data":"0x","blockHash":"0x49d02c25d3a437d307422d6ee8c74c253da6365b95b51bc31e6c508692b301f2","blockNumber":"0x5d65b2","transactionHash":"0xabc8322e3c8a01e41fedc042a154b0fd0d92ba536fc514d970efa905fc8d8e4f","transactionIndex":"0x4","logIndex":"0x3","removed":false}]
logsBloom               0x
root                    
status                  1
transactionHash         0xabc8322e3c8a01e41fedc042a154b0fd0d92ba536fc514d970efa905fc8d8e4f
transactionIndex        4
type                    2
to                      0x0869B6765f2f586e5391DafBB264a8E02786d4Ae
#+end_src



Now we should see if we can rotate a key for the DAC. In production it
might be safer to add a few additional nodes rather than trying a
migration like this.

Let's create a new key for our DAC member:

#+begin_src bash :exports both verbatim :results output code
cast wallet new
#+end_src

#+RESULTS:
#+begin_src bash
Successfully created new keypair.
Address:     0x9060731071861B4B39bdE13dE60af2894a787e24
Private key: 0xfaca486487112fb069d2208e6f701609360eba3d681c8277099af0a1b8eba623
#+end_src

Let's update this value on chain

#+begin_src bash :exports both verbatim :results output code
new_admin_pkey="0xfb0f464c1a3677322b8da811ef6a3fc78f329d49dce1e8fb37d54dcc8e6edf73"
dac_addr="0x0869B6765f2f586e5391DafBB264a8E02786d4Ae"
cast send \
    --private-key "$new_admin_pkey" \
    --rpc-url "https://eth-sepolia.public.blastapi.io" \
    "$dac_addr" \
    'function setupCommittee(uint256 _requiredAmountOfSignatures, string[] urls, bytes addrsBytes) returns()' \
    1 ["http://zkevm-dac-001:8484"] "0x9060731071861B4B39bdE13dE60af2894a787e24"
#+end_src

#+RESULTS:
#+begin_src bash

blockHash               0x0f68eb5c7bb9e2c7af4043ad79f15719ac36be19db91f4443f5d91d66bea1ce8
blockNumber             6120887
contractAddress         
cumulativeGasUsed       596899
effectiveGasPrice       3002637581
from                    0x136e406BCD6Ea0932A4f543E9ED52567BD49E39D
gasUsed                 53690
logs                    [{"address":"0x0869b6765f2f586e5391dafbb264a8e02786d4ae","topics":["0x831403fd381b3e6ac875d912ec2eee0e0203d0d29f7b3e0c96fc8f582d6db657"],"data":"0xe0a5d072551ece72008fb925682cb15f1a06be717fa38a39966a97f28233d2f3","blockHash":"0x0f68eb5c7bb9e2c7af4043ad79f15719ac36be19db91f4443f5d91d66bea1ce8","blockNumber":"0x5d65b7","transactionHash":"0xd1b4b12c6e2dc6b5e00dbbe524fd647f92d6435c17de026759996f9b3dd9d18b","transactionIndex":"0x1","logIndex":"0x1","removed":false}]
logsBloom               0x
root                    
status                  1
transactionHash         0xd1b4b12c6e2dc6b5e00dbbe524fd647f92d6435c17de026759996f9b3dd9d18b
transactionIndex        1
type                    2
to                      0x0869B6765f2f586e5391DafBB264a8E02786d4Ae
#+end_src


Okay there should be a new DAC key for onchain
verification. Unfortately, the application requires a keystore, so
we'll need to wrangle private key into a keystore file.

#+begin_src bash :exports both verbatim :results output code
polycli parseethwallet --hexkey "0xfaca486487112fb069d2208e6f701609360eba3d681c8277099af0a1b8eba623" --password "pSnv6Dh5s9ahuzGzH9RoCDrKAMddaX3m" --keystore /tmp/dac
cat /tmp/dac/UTC* | jq '.' | tee dac-new.keystore
#+end_src

#+RESULTS:
#+begin_src bash
{
  "address": "9060731071861b4b39bde13de60af2894a787e24",
  "crypto": {
    "cipher": "aes-128-ctr",
    "ciphertext": "40c55ac360efaa214a476aa3385e88acca70c48089e42092b4e9c05060409886",
    "cipherparams": {
      "iv": "7c43d5574dd541d3dbc21936171bfb47"
    },
    "kdf": "scrypt",
    "kdfparams": {
      "dklen": 32,
      "n": 262144,
      "p": 1,
      "r": 8,
      "salt": "47bd87edc8fba8d2c33cf2c2b3a84e6670a072933607ca1496e8f2e72cff161b"
    },
    "mac": "6445f5ae55897ee618d38dc9dff31f5f998fc94a4c0cdcb51cf9e3ecd490efcb"
  },
  "id": "3cc3de83-e81f-4b40-aed1-52a353089607",
  "version": 3
}
#+end_src

We now have a new file that we can use as the keystore for our
dac. We're going to copy this file into the image and restart it. If I
run ~kurtosis enclave inspect cdk-v1 --full-uuids~ I'll be able to get
the UUID for the ~zkevm-dac-001~ and then write a copy command to
replace the current keystore.

#+begin_src bash
docker cp dac-new.keystore zkevm-dac-001--2e5dad47388d408e8fd8f8e8422e80d3:/etc/zkevm/dac.keystore
kurtosis service stop cdk-v1 zkevm-dac-001
kurtosis service start cdk-v1 zkevm-dac-001
#+end_src

I can see these logs in the sequence sender

#+begin_example
[zkevm-node-sequence-sender-001] {"level":"info","ts":1718553933.0236285,"caller":"datacommittee/datacommittee.go:210","msg":"sending request to sign the sequence to 0x9060731071861B4B39bdE13dE60af2894a787e24 at http://zkevm-dac-001:8484","pid":7,"version":"0.6.5+cdk"}
[zkevm-node-sequence-sender-001] {"level":"info","ts":1718553933.0260458,"caller":"datacommittee/datacommittee.go:195","msg":"received signature from 0x9060731071861B4B39bdE13dE60af2894a787e24","pid":7,"version":"0.6.5+cdk"}
#+end_example

I think that's a good thing since that's the address for our new DAC
member. Now we can see that a sequenced with signatures from the new
DAC key: https://sepolia.etherscan.io/tx/0xddde4fc1ee71e11692315b11254081ae9f8de80f8568e029e424f603426cc94f

At this point, we should be good to try to rotate the sequencer
key. The first thing we'll do is modify the sequencer's config in
order to halt on a specific batch number. The script here will get the
current trusted batch number, add 3 to it, and configure the sequencer
to halt on that new batch number.


#+begin_src bash :exports both verbatim :results output code
export ETH_RPC_URL="$(kurtosis port print cdk-v1 zkevm-node-rpc-001 http-rpc)"
cur_batch_number=$(cast rpc zkevm_batchNumber | jq -r '.' | sed 's/^0x//' | tr '[:lower:]' '[:upper:]')
halt_number=$(bc <<< "ibase=16; $cur_batch_number + 3")
docker cp zkevm-node-sequencer-001--9132032e5777401cbb758690b758f72c:/etc/zkevm/node-config.toml sequencer-config.toml
tomlq -t --in-place ".Sequencer.Finalizer.HaltOnBatchNumber = $halt_number" sequencer-config.toml
docker cp sequencer-config.toml zkevm-node-sequencer-001--9132032e5777401cbb758690b758f72c:/etc/zkevm/node-config.toml
kurtosis service stop cdk-v1 zkevm-node-sequencer-001
kurtosis service start cdk-v1 zkevm-node-sequencer-001
#+end_src

#+RESULTS:
#+begin_src bash
[36mINFO[0m[2024-06-16T12:20:49-04:00] Stopping service 'zkevm-node-sequencer-001'  
[36mINFO[0m[2024-06-16T12:20:52-04:00] Starting service 'zkevm-node-sequencer-001'  
#+end_src

Now we can watch the logs of the sequencer to see when the sequencer
will halt. At that point we should wait for the verified batch number
to catch up. While we wait for that, we can start with some of the
sequencer prep. We'll need a new sequencer and it will need some POL
token associated with it.


#+begin_src bash :exports both verbatim :results output code
cast wallet new
#+end_src

#+RESULTS:
#+begin_src bash
Successfully created new keypair.
Address:     0x45A980A84Fb06c275bDB5496ead3FbCDcb278166
Private key: 0x973aa8a45597d4a54d7b54e7ec47d8622c6a5582d1e7ac525ae76b12a599e047
#+end_src

In my sequencer logs, I now see messages like this:

#+begin_example
halting finalizer, error: finalizer reached stop sequencer on batch number: 3456
#+end_example

So I think we just need to wait for everything to get finalized. We
can use a snippet like this to wait for the verified batch number to
catch up. If we're in a hurry, we can make some tweaks in order to
speed up the batch verification process.

#+begin_src bash :exports both verbatim :results output code
export ETH_RPC_URL="$(kurtosis port print cdk-v1 zkevm-node-rpc-001 http-rpc)"
cast rpc zkevm_batchNumber
cast rpc zkevm_virtualBatchNumber
cast rpc zkevm_verifiedBatchNumber
#+end_src

#+RESULTS:
#+begin_src bash
"0xd7f"
"0xd7f"
"0xd7f"
#+end_src


It looks like everything is in sync. Let's try to modify the sequencer
key now.

#+begin_src bash :exports both verbatim :results output code
polycli parseethwallet --hexkey "0x973aa8a45597d4a54d7b54e7ec47d8622c6a5582d1e7ac525ae76b12a599e047" --password "pSnv6Dh5s9ahuzGzH9RoCDrKAMddaX3m" --keystore /tmp/seq
cat /tmp/seq/UTC* | jq '.' | tee sequencer-new.keystore
docker cp sequencer-new.keystore zkevm-node-sequence-sender-001--b0879dd067b3446eb092f55a7edbc407:/etc/zkevm/sequencer.keystore

docker cp zkevm-node-sequence-sender-001--b0879dd067b3446eb092f55a7edbc407:/etc/zkevm/node-config.toml sequencer-config.toml
tomlq -t --in-place ".Sequencer.Finalizer.HaltOnBatchNumber = 0" sequencer-config.toml
tomlq -t --in-place ".SequenceSender.L2Coinbase = \"0x45A980A84Fb06c275bDB5496ead3FbCDcb278166\"" sequencer-config.toml
tomlq -t --in-place ".SequenceSender.SenderAddress = \"0x45A980A84Fb06c275bDB5496ead3FbCDcb278166\"" sequencer-config.toml
docker cp sequencer-config.toml zkevm-node-sequencer-001--9132032e5777401cbb758690b758f72c:/etc/zkevm/node-config.toml
docker cp sequencer-config.toml zkevm-node-sequence-sender-001--b0879dd067b3446eb092f55a7edbc407:/etc/zkevm/node-config.toml
kurtosis service stop cdk-v1 zkevm-node-sequencer-001
kurtosis service stop cdk-v1 zkevm-node-sequence-sender-001
#+end_src

#+RESULTS:
#+begin_src bash
{
  "address": "45a980a84fb06c275bdb5496ead3fbcdcb278166",
  "crypto": {
    "cipher": "aes-128-ctr",
    "ciphertext": "a3d74c7b293fa0a19f443eb611d7bfc95169aa370ae7b64945e7a95471befadb",
    "cipherparams": {
      "iv": "602edac4e93f1749df5ed76465ceefc3"
    },
    "kdf": "scrypt",
    "kdfparams": {
      "dklen": 32,
      "n": 262144,
      "p": 1,
      "r": 8,
      "salt": "23b9f9b6acbd3689395b0e2fd95276eeb06ded545fd120be8d89508e0ca43365"
    },
    "mac": "6efbc900885e97eb5e8c36920ce58c54415739c0dc342b994888ee788d457f77"
  },
  "id": "2b444672-1819-4575-9a0a-feafe91717c0",
  "version": 3
}
[36mINFO[0m[2024-06-16T12:48:37-04:00] Stopping service 'zkevm-node-sequencer-001'  
[36mINFO[0m[2024-06-16T12:48:40-04:00] Stopping service 'zkevm-node-sequence-sender-001' 
#+end_src


Now let's do the on-chain call to update the trusted sequencer

#+begin_src bash :exports both verbatim :results output code
new_admin_pkey="0xfb0f464c1a3677322b8da811ef6a3fc78f329d49dce1e8fb37d54dcc8e6edf73"
cast send --rpc-url https://eth-sepolia.public.blastapi.io --private-key $new_admin_pkey 0x025a2916663273d21F102d2F9f8bace92534E56A 'setTrustedSequencer(address)' 0x45A980A84Fb06c275bDB5496ead3FbCDcb278166
#+end_src

#+RESULTS:
#+begin_src bash

blockHash               0xd40567d53b0379fb96ad83e259d6a822335606bc699dbc9b9e24d709f5d85f88
blockNumber             6121119
contractAddress         
cumulativeGasUsed       379403
effectiveGasPrice       3000896422
from                    0x136e406BCD6Ea0932A4f543E9ED52567BD49E39D
gasUsed                 34976
logs                    [{"address":"0x025a2916663273d21f102d2f9f8bace92534e56a","topics":["0xf54144f9611984021529f814a1cb6a41e22c58351510a0d9f7e822618abb9cc0"],"data":"0x00000000000000000000000045a980a84fb06c275bdb5496ead3fbcdcb278166","blockHash":"0xd40567d53b0379fb96ad83e259d6a822335606bc699dbc9b9e24d709f5d85f88","blockNumber":"0x5d669f","transactionHash":"0x9a00fbfa133627d4e7814252d7bfa74fb94c17e925d8949312ab26dc5f51fa36","transactionIndex":"0x5","logIndex":"0x7","removed":false}]
logsBloom               0x
root                    
status                  1
transactionHash         0x9a00fbfa133627d4e7814252d7bfa74fb94c17e925d8949312ab26dc5f51fa36
transactionIndex        5
type                    2
to                      0x025a2916663273d21F102d2F9f8bace92534E56A
#+end_src


Now let's start things back up.

#+begin_src bash :exports both verbatim :results output code
kurtosis service start cdk-v1 zkevm-node-sequencer-001
kurtosis service start cdk-v1 zkevm-node-sequence-sender-001
#+end_src

#+RESULTS:
#+begin_src bash
[36mINFO[0m[2024-06-16T12:49:33-04:00] Starting service 'zkevm-node-sequencer-001'  
[36mINFO[0m[2024-06-16T12:49:35-04:00] Starting service 'zkevm-node-sequence-sender-001' 
#+end_src

This transaction updates the trusted sequencer:
https://sepolia.etherscan.io/tx/0x9a00fbfa133627d4e7814252d7bfa74fb94c17e925d8949312ab26dc5f51fa36

We previously halted on batch ~0xd7f~, so we need to make sure that we
sequence and verify batches after this number.

One oversight, I forgot to mint POL to the new sequencer. Let's try to
do that now:

#+begin_src bash :exports both verbatim :results output code
cast send --rpc-url https://eth-sepolia.public.blastapi.io --private-key 0x973aa8a45597d4a54d7b54e7ec47d8622c6a5582d1e7ac525ae76b12a599e047 0x0Fa919B5631C56F0Bdc9Ef5C3cD2b709CcEB4157 'mint(address,uint256)' 0x45A980A84Fb06c275bDB5496ead3FbCDcb278166 100000000000000000000000
#+end_src

#+RESULTS:
#+begin_src bash

blockHash               0x44deda2f43371811b4b5cc5941de429fc0d91ed5e9cdd1f0e3d40b2d66618efb
blockNumber             6121150
contractAddress         
cumulativeGasUsed       261104
effectiveGasPrice       3000961337
from                    0x45A980A84Fb06c275bDB5496ead3FbCDcb278166
gasUsed                 51167
logs                    [{"address":"0x0fa919b5631c56f0bdc9ef5c3cd2b709cceb4157","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x0000000000000000000000000000000000000000000000000000000000000000","0x00000000000000000000000045a980a84fb06c275bdb5496ead3fbcdcb278166"],"data":"0x00000000000000000000000000000000000000000000152d02c7e14af6800000","blockHash":"0x44deda2f43371811b4b5cc5941de429fc0d91ed5e9cdd1f0e3d40b2d66618efb","blockNumber":"0x5d66be","transactionHash":"0x68f4f0331ad2cf6737d3e17e8ed041a04ad4200965023aacfd02fb3972ab56f8","transactionIndex":"0x4","logIndex":"0x5","removed":false}]
logsBloom               0x
root                    
status                  1
transactionHash         0x68f4f0331ad2cf6737d3e17e8ed041a04ad4200965023aacfd02fb3972ab56f8
transactionIndex        4
type                    2
to                      0x0Fa919B5631C56F0Bdc9Ef5C3cD2b709CcEB4157
#+end_src

We also need to approve the rollup to spend this POL:

#+begin_src bash :exports both verbatim :results output code
cast send --rpc-url https://eth-sepolia.public.blastapi.io --private-key 0x973aa8a45597d4a54d7b54e7ec47d8622c6a5582d1e7ac525ae76b12a599e047 0x0Fa919B5631C56F0Bdc9Ef5C3cD2b709CcEB4157 'approve(address,uint256)' 0x025a2916663273d21F102d2F9f8bace92534E56A 100000000000000000000000
#+end_src

#+RESULTS:
#+begin_src bash

blockHash               0x6d00a20629dfc82bdaa81c36b92d6eca27c47a534f3034f322ff379a0a812c74
blockNumber             6121156
contractAddress         
cumulativeGasUsed       461130
effectiveGasPrice       3000969493
from                    0x45A980A84Fb06c275bDB5496ead3FbCDcb278166
gasUsed                 46255
logs                    [{"address":"0x0fa919b5631c56f0bdc9ef5c3cd2b709cceb4157","topics":["0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","0x00000000000000000000000045a980a84fb06c275bdb5496ead3fbcdcb278166","0x000000000000000000000000025a2916663273d21f102d2f9f8bace92534e56a"],"data":"0x00000000000000000000000000000000000000000000152d02c7e14af6800000","blockHash":"0x6d00a20629dfc82bdaa81c36b92d6eca27c47a534f3034f322ff379a0a812c74","blockNumber":"0x5d66c4","transactionHash":"0x5855ce864085342d7618b0a79348a3503b81e49fa943b5f93307dd0835e94530","transactionIndex":"0x5","logIndex":"0xa","removed":false}]
logsBloom               0x
root                    
status                  1
transactionHash         0x5855ce864085342d7618b0a79348a3503b81e49fa943b5f93307dd0835e94530
transactionIndex        5
type                    2
to                      0x0Fa919B5631C56F0Bdc9Ef5C3cD2b709CcEB4157
#+end_src

I'm seeing errors like this in the sequence sender, so it looks like
the DAC doesn't like something. Let's just try to restart it for the
time being.

#+begin_example
[zkevm-node-sequence-sender-001] {"level":"error","ts":1718556755.4117923,"caller":"datacommittee/datacommittee.go:188","msg":"error when trying to get signature from 0x9060731071861B4B39bdE13dE60af2894a787e24: -32000 unauthorized%!(EXTRA string=\n/home/runner/work/cdk-validium-node/cdk-validium-node/log/log.go:142 github.com/0xPolygonHermez/zkevm-node/log.appendStackTraceMaybeArgs()\n/home/runner/work/cdk-validium-node/cdk-validium-node/log/log.go:251 github.com/0xPolygonHermez/zkevm-node/log.Errorf()\n/home/runner/work/cdk-validium-node/cdk-validium-node/dataavailability/datacommittee/datacommittee.go:188 github.com/0xPolygonHermez/zkevm-node/dataavailability/datacommittee.(*DataCommitteeBackend).PostSequence()\n/home/runner/work/cdk-validium-node/cdk-validium-node/dataavailability/dataavailability.go:55 github.com/0xPolygonHermez/zkevm-node/dataavailability.(*DataAvailability).PostSequence()\n/home/runner/work/cdk-validium-node/cdk-validium-node/sequencesender/sequencesender.go:188 github.com/0xPolygonHermez/zkevm-node/sequencesender.(*SequenceSender).tryToSendSequence()\n/home/runner/work/cdk-validium-node/cdk-validium-node/sequencesender/sequencesender.go:60 github.com/0xPolygonHermez/zkevm-node/sequencesender.(*SequenceSender).Start()\n)","pid":7,"version":"0.6.5+cdk","stacktrace":"github.com/0xPolygonHermez/zkevm-node/dataavailability/datacommittee.(*DataCommitteeBackend).PostSequence\n\t/home/runner/work/cdk-validium-node/cdk-validium-node/dataavailability/datacommittee/datacommittee.go:188\ngithub.com/0xPolygonHermez/zkevm-node/dataavailability.(*DataAvailability).PostSequence\n\t/home/runner/work/cdk-validium-node/cdk-validium-node/dataavailability/dataavailability.go:55\ngithub.com/0xPolygonHermez/zkevm-node/sequencesender.(*SequenceSender).tryToSendSequence\n\t/home/runner/work/cdk-validium-node/cdk-validium-node/sequencesender/sequencesender.go:188\ngithub.com/0xPolygonHermez/zkevm-node/sequencesender.(*SequenceSender).Start\n\t/home/runner/work/cdk-validium-node/cdk-validium-node/sequencesender/sequencesender.go:60"}

#+end_example


#+begin_src bash :exports both verbatim :results output code
kurtosis service stop cdk-v1 zkevm-dac-001
kurtosis service start cdk-v1 zkevm-dac-001
#+end_src

#+RESULTS:
#+begin_src bash
[36mINFO[0m[2024-06-16T12:58:34-04:00] Stopping service 'zkevm-dac-001'             
[36mINFO[0m[2024-06-16T12:58:36-04:00] Starting service 'zkevm-dac-001'             
#+end_src


Things look better after the restart. It looks like the change in
sequencer will require a restart on the DAC.

#+begin_example
[zkevm-node-sequence-sender-001] {"level":"info","ts":1718557119.9034042,"caller":"datacommittee/datacommittee.go:210","msg":"sending request to sign the sequence to 0x9060731071861B4B39bdE13dE60af2894a787e24 at http://zkevm-dac-001:8484","pid":7,"version":"0.6.5+cdk"}
[zkevm-node-sequence-sender-001] {"level":"info","ts":1718557119.907728,"caller":"datacommittee/datacommittee.go:195","msg":"received signature from 0x9060731071861B4B39bdE13dE60af2894a787e24","pid":7,"version":"0.6.5+cdk"}
#+end_example


For some reason, the sequence sender seems to have sent a sequence,
but it's never getting mined. I'm going to remove that from the
~monitored_txs~ table and restart it.


Even after deleting the transaction, the same thing seems to have
happened. I copied input data and manually sent it with ~cast~.

#+begin_src bash
cast send --nonce 2 --private-key 0x973aa8a45597d4a54d7b54e7ec47d8622c6a5582d1e7ac525ae76b12a599e047 --rpc-url https://eth-sepolia.public.blastapi.io 0x025a2916663273d21F102d2F9f8bace92534E56A 0xdb5b0ed700000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000666f1cc50000000000000000000000000000000000000000000000000000000000000d7f00000000000000000000000045a980a84fb06c275bdb5496ead3fbcdcb2781660000000000000000000000000000000000000000000000000000000000000640000000000000000000000000000000000000000000000000000000000000000b528a293527414ebd8b578d4d953e0a53cdd03c81633bf3ea44d034b77fe216e5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f94add035eabc6e18ba3d34c7343bd9e8c606695653135a481cce9b9e8de67c3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f94add035eabc6e18ba3d34c7343bd9e8c606695653135a481cce9b9e8de67c3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f94add035eabc6e18ba3d34c7343bd9e8c606695653135a481cce9b9e8de67c3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f94add035eabc6e18ba3d34c7343bd9e8c606695653135a481cce9b9e8de67c3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f94add035eabc6e18ba3d34c7343bd9e8c606695653135a481cce9b9e8de67c3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f94add035eabc6e18ba3d34c7343bd9e8c606695653135a481cce9b9e8de67c3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f94add035eabc6e18ba3d34c7343bd9e8c606695653135a481cce9b9e8de67c3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f94add035eabc6e18ba3d34c7343bd9e8c606695653135a481cce9b9e8de67c3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f94add035eabc6e18ba3d34c7343bd9e8c606695653135a481cce9b9e8de67c3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f94add035eabc6e18ba3d34c7343bd9e8c606695653135a481cce9b9e8de67c3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005539d208c9f4d22ef2cebd80f2a6cd344b2f2bfe8f952746edad5ccdccf5f87c2347fe7392bf1a7968d39ad52d8e2973e8b8f319c5a32ad93c28e6ee6d007d05981c9060731071861b4b39bde13de60af2894a787e240000000000000000000000
#+end_src

#+RESULTS:
#+begin_example
blockHash               0x41b87166da9ccefa5d2d31bc299839369b049961c54eecc497ae233786274a2f
blockNumber             6121242
contractAddress         
cumulativeGasUsed       1420712
effectiveGasPrice       3000783176
from                    0x45A980A84Fb06c275bDB5496ead3FbCDcb278166
gasUsed                 246320
logs                    [{"address":"0x0fa919b5631c56f0bdc9ef5c3cd2b709cceb4157","topics":["0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","0x00000000000000000000000045a980a84fb06c275bdb5496ead3fbcdcb278166","0x000000000000000000000000025a2916663273d21f102d2f9f8bace92534e56a"],"data":"0x00000000000000000000000000000000000000000000152cf383e51ef1920000","blockHash":"0x41b87166da9ccefa5d2d31bc299839369b049961c54eecc497ae233786274a2f","blockNumber":"0x5d671a","transactionHash":"0xdf36e08ee8557366dce343adcb7346d99596213c5a5a18e38000666bfb0e340c","transactionIndex":"0x7","logIndex":"0xb","removed":false},{"address":"0x0fa919b5631c56f0bdc9ef5c3cd2b709cceb4157","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x00000000000000000000000045a980a84fb06c275bdb5496ead3fbcdcb278166","0x0000000000000000000000006084f261c8b9d4339e4c0a2fb6e886fad1ff0259"],"data":"0x0000000000000000000000000000000000000000000000000f43fc2c04ee0000","blockHash":"0x41b87166da9ccefa5d2d31bc299839369b049961c54eecc497ae233786274a2f","blockNumber":"0x5d671a","transactionHash":"0xdf36e08ee8557366dce343adcb7346d99596213c5a5a18e38000666bfb0e340c","transactionIndex":"0x7","logIndex":"0xc","removed":false},{"address":"0x6084f261c8b9d4339e4c0a2fb6e886fad1ff0259","topics":["0x1d9f30260051d51d70339da239ea7b080021adcaabfa71c9b0ea339a20cf9a25","0x0000000000000000000000000000000000000000000000000000000000000001"],"data":"0x0000000000000000000000000000000000000000000000000000000000000d8a","blockHash":"0x41b87166da9ccefa5d2d31bc299839369b049961c54eecc497ae233786274a2f","blockNumber":"0x5d671a","transactionHash":"0xdf36e08ee8557366dce343adcb7346d99596213c5a5a18e38000666bfb0e340c","transactionIndex":"0x7","logIndex":"0xd","removed":false},{"address":"0x025a2916663273d21f102d2f9f8bace92534e56a","topics":["0x3e54d0825ed78523037d00a81759237eb436ce774bd546993ee67a1b67b6e766","0x0000000000000000000000000000000000000000000000000000000000000d8a"],"data":"0x20fbf578452ba8f8c7eb83cac231699454f0ed5100735610d2d2c541917b2b67","blockHash":"0x41b87166da9ccefa5d2d31bc299839369b049961c54eecc497ae233786274a2f","blockNumber":"0x5d671a","transactionHash":"0xdf36e08ee8557366dce343adcb7346d99596213c5a5a18e38000666bfb0e340c","transactionIndex":"0x7","logIndex":"0xe","removed":false}]
logsBloom               0x
root                    
status                  1
transactionHash         0xdf36e08ee8557366dce343adcb7346d99596213c5a5a18e38000666bfb0e340c
transactionIndex        7
type                    2
to                      0x025a2916663273d21F102d2F9f8bace92534E56A
#+end_example

https://sepolia.etherscan.io/tx/0xdf36e08ee8557366dce343adcb7346d99596213c5a5a18e38000666bfb0e340c

That seems to have worked, but unclear why the sequence sender wasn't
successfull sending the transaction on it's own since all I did was
copy / paste the data.

I had to do the same thing with the next sequence:
https://sepolia.etherscan.io/tx/0xf00d9fdcdc417743d4ea123ca9602e05554f3b00eae8f7d7832818b4c51eb75a


