---
# Deployment parameters.

# Suffix appended to service names.
# Note: It should be a string.
deployment_suffix: "-001"

# Docker images and repositories used to spin up services.
zkevm_prover_image: hermeznetwork/zkevm-prover:v5.0.7
zkevm_node_image: 0xpolygon/cdk-validium-node:0.6.2-cdk
zkevm_dac_image: 0xpolygon/cdk-data-availability:0.0.6
zkevm_agglayer_image: nulyjkdhthz/agglayer:v0.1.0
zkevm_contracts_branch: v5.0.1-rc.2-fork.8
zkevm_contracts_repo: https://github.com/0xPolygonHermez/zkevm-contracts.git

# Port configuration.
zkevm_hash_db_port: 50061
zkevm_executor_port: 50071
zkevm_aggregator_port: 50081
zkevm_pprof_port: 6060
zkevm_prometheus_port: 9091
zkevm_data_streamer_port: 6900
zkevm_rpc_http_port: 8123
zkevm_rpc_ws_port: 8133
zkevm_bridge_rpc_port: 8080
zkevm_bridge_grpc_port: 9090
zkevm_agglayer_port: 4444
zkevm_dac_port: 8484

# Addresses and private keys of the different components.
# They have been generated using the following command:
# polycli wallet inspect --mnemonic 'lab code glass agree maid neutral vessel horror deny frequent favorite soft gate galaxy proof vintage once figure diary virtual scissors marble shrug drop' --addresses 8 | tee keys.txt | jq -r '.Addresses[] | [.ETHAddress, .HexPrivateKey] | @tsv' | awk 'BEGIN{split("sequencer,aggregator,claimtxmanager,timelock,admin,loadtest,agglayer,dac",roles,",")} {print "zkevm_l2_" roles[NR] "_address: \"" $1 "\""; print "zkevm_l2_" roles[NR] "_private_key: \"0x" $2 "\"\n"}'
zkevm_l2_sequencer_address: "0x5b06837A43bdC3dD9F114558DAf4B26ed49842Ed"
zkevm_l2_sequencer_private_key: "0x183c492d0ba156041a7f31a1b188958a7a22eebadca741a7fe64436092dc3181"

zkevm_l2_aggregator_address: "0xCae5b68Ff783594bDe1b93cdE627c741722c4D4d"
zkevm_l2_aggregator_private_key: "0x2857ca0e7748448f3a50469f7ffe55cde7299d5696aedd72cfe18a06fb856970"

zkevm_l2_claimtxmanager_address: "0x5f5dB0D4D58310F53713eF4Df80ba6717868A9f8"
zkevm_l2_claimtxmanager_private_key: "0x8d5c9ecd4ba2a195db3777c8412f8e3370ae9adffac222a54a84e116c7f8b934"

zkevm_l2_timelock_address: "0x130aA39Aa80407BD251c3d274d161ca302c52B7A"
zkevm_l2_timelock_private_key: "0x80051baf5a0a749296b9dcdb4a38a264d2eea6d43edcf012d20b5560708cf45f"

zkevm_l2_admin_address: "0xE34aaF64b29273B7D567FCFc40544c014EEe9970"
zkevm_l2_admin_private_key: "0x12d7de8621a77640c9241b2595ba78ce443d05e94090365ab3bb5e19df82c625"

zkevm_l2_loadtest_address: "0x81457240ff5b49CaF176885ED07e3E7BFbE9Fb81"
zkevm_l2_loadtest_private_key: "0xd7df6d64c569ffdfe7c56e6b34e7a2bdc7b7583db74512a9ffe26fe07faaa5de"

zkevm_l2_agglayer_address: "0x351e560852ee001d5D19b5912a269F849f59479a"
zkevm_l2_agglayer_private_key: "0x1d45f90c0a9814d8b8af968fa0677dab2a8ff0266f33b136e560fe420858a419"

zkevm_l2_dac_address: "0x5951F5b2604c9B42E478d5e2B2437F44073eF9A6"
zkevm_l2_dac_private_key: "0x85d836ee6ea6f48bae27b31535e6fc2eefe056f2276b9353aafb294277d8159b"

# Keystore password.
zkevm_l2_keystore_password: pSnv6Dh5s9ahuzGzH9RoCDrKAMddaX3m

# Database configuration.
zkevm_db_postgres_port: 5432

# AggLayer db
zkevm_db_agglayer_hostname: agglayer-db
zkevm_db_agglayer_name: agglayer_db
zkevm_db_agglayer_user: agglayer_user
zkevm_db_agglayer_password: PzycR2uB6PQv8ahj465ExvdyRLkknRNW

# Bridge db
zkevm_db_bridge_hostname: bridge-db
zkevm_db_bridge_name: bridge_db
zkevm_db_bridge_user: bridge_user
zkevm_db_bridge_password: aXPqaRvgo5DfnTbHtpYS9rMhVpjvb6tY

# DAC db
zkevm_db_dac_hostname: dac-db
zkevm_db_dac_name: dac_db
zkevm_db_dac_user: dac_user
zkevm_db_dac_password: PzycR2uB6PQv8ahj465ExvdyRLkknRNW

# Event db
zkevm_db_event_hostname: event-db
zkevm_db_event_name: event_db
zkevm_db_event_user: event_user
zkevm_db_event_password: rJXJN6iUAczh4oz8HRKYbVM8yC7tPeZm

# Pool db
zkevm_db_pool_hostname: pool-db
zkevm_db_pool_name: pool_db
zkevm_db_pool_user: pool_user
zkevm_db_pool_password: Qso5wMcLAN3oF7EfaawzgWKUUKWM3Vov

# Prover/Executor db
zkevm_db_prover_hostname: prover-db
zkevm_db_prover_name: prover_db
zkevm_db_prover_user: prover_user
zkevm_db_prover_password: SR5xq2KZPgvQkPDranCRhvkv6pnqfo77

# State db
zkevm_db_state_hostname: state-db
zkevm_db_state_name: state_db
zkevm_db_state_user: state_user
zkevm_db_state_password: rHTX7EpajF8zYDPatN32rH3B2pn89dmq

# L1 configuration.
l1_network_id: 2718281828459045
l1_preallocated_mnemonic: code code code code code code code code code code code quality
l1_rpc_url: http://el-1-geth-lighthouse:8545
l1_ws_url: ws://el-1-geth-lighthouse:8546
# TODO: If we need to fund the aggregator, sequencer, and admin accounts for posting batches.. How much should we prefund??
l1_funding_amount: 100ether

# L2 configuration.
zkevm_deployment_salt: "0x0000000000000000000000000000000000000000000000000000000000000001"
zkevm_fork_id: 8
zkevm_test_deployment: true
zkevm_l2_chain_id: 101010101
zkevm_rollup_consensus: PolygonValidiumEtrog # PolygonZkEVMEtrog
zkevm_da_protocol: PolygonDataCommittee
zkevm_rollup_description: kurtosis devnet
zkevm_rollup_name: kurtosis-test
zkevm_rollup_real_verifier: false

# If this is true, we will automatically deploy an ERC20 contract on
# L1 to be used at the gasTokenAddress
zkevm_use_gas_token_contract: false

# Permissionless node configuration.
trusted_sequencer_node_uri: zkevm-node-sequencer-001:6900
zkevm_aggregator_host: zkevm-node-aggregator-001
genesis_file: templates/permissionless-node/genesis.json

# Tools versions
polycli_version: v0.1.42
