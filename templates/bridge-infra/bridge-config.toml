#  ____       _     _               _____                 _             _____             __ _       
# |  _ \     (_)   | |             / ____|               (_)           / ____|           / _(_)      
# | |_) |_ __ _  __| | __ _  ___  | (___   ___ _ ____   ___  ___ ___  | |     ___  _ __ | |_ _  __ _ 
# |  _ <| '__| |/ _` |/ _` |/ _ \  \___ \ / _ \ '__\ \ / / |/ __/ _ \ | |    / _ \| '_ \|  _| |/ _` |
# | |_) | |  | | (_| | (_| |  __/  ____) |  __/ |   \ V /| | (_|  __/ | |___| (_) | | | | | | | (_| |
# |____/|_|  |_|\__,_|\__, |\___| |_____/ \___|_|    \_/ |_|\___\___|  \_____\___/|_| |_|_| |_|\__, |
#                      __/ |                                                                    __/ |
#                     |___/                                                                    |___/ 
#
# Configuration File for Bridge Server
# This file contains settings for logging, database synchronization, 
# network configuration, transaction management, and metrics collection.
# Each section is defined with specific parameters to customize the behavior of the service.

# Logging Configuration
# This section defines the logging settings, including the log level, 
# environment, and output destination for logs.                                                                                                                  
[Log]
# Set the logging level (e.g., debug, info, warn, error) to control verbosity
Level = "{{.global_log_level}}"
# Specify the environment in which the application is running (e.g., production, development)
Environment = "production"
# Define where to output logs; options include stderr (standard error) or stdout
Outputs = ["stderr"]

# Database Synchronization Configuration
# This section contains the database connection settings required for 
# synchronizing data.
[SyncDB]
# Type of database to use (e.g., postgres)
Database = "postgres"
# Username for database authentication
User = "{{.bridge_db.user}}"
# Name of the database to connect to
Name = "{{.bridge_db.name}}"
# Password for the database user
Password = "{{.bridge_db.password}}"
# Host address of the database server
Host = "{{.bridge_db.hostname}}"
# Port number on which the database server is listening
Port = "{{.bridge_db.port}}"
# Maximum number of concurrent connections to the database
MaxConns = 20

# Etherman Configuration
# This section specifies the RPC URLs for interacting with Layer 1 and Layer 2's.
[Etherman]
# URL for Layer 1 RPC endpoint to interact with the main blockchain
l1URL = "{{.l1_rpc_url}}"
# URLs for Layer 2 RPC endpoints
L2URLs = ["http://{{.l2_rpc_name}}{{.deployment_suffix}}:{{.zkevm_rpc_http_port}}"]

# Synchronization Settings
# This section defines the parameters for synchronizing data, including 
# the interval and chunk size for synchronization operations.
[Synchronizer]
# Time interval for synchronization iterations (e.g., every 5 seconds)
SyncInterval = "5s"
# Number of blocks to read in each synchronization operation if the service is not synced and if there is enough data.
SyncChunkSize = 100
# Forces the SyncChunkSize for L2 networks. The chunck size won't be higher than the value specified but if there is not enough events in the network, the reorg protection can be affected.
ForceL2SyncChunk = true

# Bridge Controller Configuration
# This section contains settings for the bridge controller, including 
# the storage type and merkle tree height parameter.
[BridgeController]
# Type of storage used by the bridge controller (e.g., postgres)
Store = "postgres"
# Height parameter specifies the height of the merkle tree used for the bridge.
Height = 32

# Bridge Server Configuration
# This section defines the settings for the bridge server API, including 
# ports for gRPC and HTTP communication, pagination limits, and database.
[BridgeServer]
# Port for gRPC communication with the bridge server
GRPCPort = "{{.zkevm_bridge_grpc_port}}"
# Port for HTTP communication with the bridge server
HTTPPort = "{{.zkevm_bridge_rpc_port}}"
# Default limit for paginated results returned by the server
DefaultPageLimit = 25
# Maximum limit for paginated results to prevent excessive data retrieval
MaxPageLimit = 1000
    # Database configuration for the bridge server. Could be the same config as SyncDB but ideally It should be a read replica to distribute the load.
    [BridgeServer.DB]
    # Type of database for the bridge server
    Database = "postgres"
    # Database user for authentication
    User = "{{.bridge_db.user}}"
    # Database name for the bridge server
    Name = "{{.bridge_db.name}}"
    # Password for the database user
    Password = "{{.bridge_db.password}}"
    # Host address of the database server
    Host = "{{.bridge_db.hostname}}"
    # Port number for the database connection
    Port = "{{.bridge_db.port}}"
    # Maximum number of connections to the database for the bridge server
    MaxConns = 20

# Network Configuration
# This section contains settings related to the network, including smart contract addresses and
# L1 bridge genesis block.
[NetworkConfig]
# Block number where the L1 bridge smart contract was deployed. The bridge needs to compute the merkle tree based on events from that block.
GenBlockNumber = "{{.zkevm_rollup_manager_block_number}}"
# Address of the Polygon bridge smc
PolygonBridgeAddress = "{{.zkevm_bridge_address}}"
# Address of the Global exit root smc
PolygonZkEVMGlobalExitRootAddress = "{{.zkevm_global_exit_root_address}}"
# Address of the rollup manager smc
PolygonRollupManagerAddress = "{{.zkevm_rollup_manager_address}}"
# Address of the zkEVM smc
PolygonZkEVMAddress = "{{.zkevm_rollup_address}}"
# List of Layer 2 Polygon bridge addresses. It must have the same length as L2URLs. e.g. If 5 networks need to be synced, the urls must be in this array.
L2PolygonBridgeAddresses = ["{{.zkevm_bridge_l2_address}}"]
# Flag indicating whether to require sovereign chain smcs or not. It must have the same length as L2PolygonBridgeAddresses
RequireSovereignChainSmcs = [false]
# List of global exit root addresses for Layer 2. Same length as L2PolygonBridgeAddresses
L2PolygonZkEVMGlobalExitRootAddresses = ["{{.zkevm_global_exit_root_l2_address}}"]

# Claim Transaction Manager Configuration
# This section contains settings for managing claim transactions. It includes
# enabling or disabling the ClaimTxManager, monitoring frequency, private key 
# configuration, and retry settings for sending transactions.
[ClaimTxManager]
# Enable or disable the claim transaction manager
Enabled = true
# Frequency to monitor transactions
FrequencyToMonitorTxs = "5s"
# Path and password for the private key
PrivateKey = {Path = "/etc/zkevm/claimtxmanager.keystore", Password = "{{.zkevm_l2_keystore_password}}"}
# Interval between retries
RetryInterval = "1s"
# Number of retry attempts
RetryNumber = 10

# Metrics Configuration
# This section defines settings for collecting and exposing metrics related 
# to the application's performance and health. It includes options to enable 
# or disable metrics collection, as well as the host and port for metrics 
# exposure.
[Metrics]
# Enable or disable metrics
Enabled = true
# Host address for the metrics
Host = "0.0.0.0"
# Port for the metrics
Port = "{{.zkevm_bridge_metrics_port}}"
