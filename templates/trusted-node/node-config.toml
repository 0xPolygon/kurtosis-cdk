################################################################################
# IsTrustedSequencer is used to configure if the node has as a trusted
# node or not. This setting has implications beyond the sequencer. In
# the case of a validium, setting IsTrustedSequencer to true for a
# permissionless node forces the synchronizer to pull data from the
# DAC because it assumes that it cannot pull from a trusted sequencer.
################################################################################
IsTrustedSequencer = true

################################################################################
# ForkUpgradeBatchNumber is used to configure a batch number that will
# use a new fork id. The idea is that we could continue sequencing
# transactions but stop virtualizing. In many cases, if you're okay
# with some downtime for an upgrade it's much simpler to just stop all
# of the components.
#
# https://github.com/0xPolygonHermez/zkevm-node/issues/2236
#
################################################################################
ForkUpgradeBatchNumber = 0

################################################################################
# ForkUpgradeNewForkId is used to specify the new fork id that we'll
# be upgrading to.
################################################################################
ForkUpgradeNewForkId = 0

################################################################################
#  _     ___   ____
# | |   / _ \ / ___|
# | |  | | | | |  _
# | |__| |_| | |_| |
# |_____\___/ \____|
#
################################################################################
[Log]

################################################################################
# Environment generally dictates the format of the logs and the
# sampling rate. We often default to production even for development
# because of the JSON encoding.
#
# https://github.com/uber-go/zap/blob/a55bdc32f526699c3b4cc51a2cc97e944d02fbbf/config.go#L120
# https://github.com/uber-go/zap/blob/a55bdc32f526699c3b4cc51a2cc97e944d02fbbf/config.go#L161
################################################################################
Environment = "production" # "production" or "development"

################################################################################
# Level determines the log level that will be written to the
# log. Generally we'll switch to debug if we want to troubleshoot
# something specifically otherwise we leave it at info
################################################################################
Level = "info"

################################################################################
# Outputs define the output paths for writing logs. The default is to
# write to stderr, but other output paths should be supported
#
# https://github.com/uber-go/zap/blob/a55bdc32f526699c3b4cc51a2cc97e944d02fbbf/writer.go#L32-L50
################################################################################
Outputs = ["stderr"]

################################################################################
#  _____ _____ _   _ _____ ____  __  __    _    _   _
# | ____|_   _| | | | ____|  _ \|  \/  |  / \  | \ | |
# |  _|   | | | |_| |  _| | |_) | |\/| | / _ \ |  \| |
# | |___  | | |  _  | |___|  _ <| |  | |/ ___ \| |\  |
# |_____| |_| |_| |_|_____|_| \_\_|  |_/_/   \_\_| \_|
#
################################################################################
[Etherman]

################################################################################
# URL should be used to configure your L1 RPC address.
################################################################################
URL = "{{.l1_rpc_url}}"

################################################################################
# ForkIDChunkSize is used to configure how big a rang of blocks can be
# searched while initializing the chain. Some RPC providers will limit
# you to 10000 blocks at a time
################################################################################
ForkIDChunkSize = 9999

################################################################################
# MultiGasProvider can be set to true in order to use a gas station
# provider in addition to using a normal RPC gas pricer. This feature
# is not used as far as we know
#
# Deprecated: This feature currently uses gas station which has been
# decommissioned
#
################################################################################
MultiGasProvider = false

[Etherman.Etherscan]

################################################################################
# ApiKey is key for using the gas station service
#
# Deprecated: This feature currently uses gas station which has been
# decommissioned
#
################################################################################
ApiKey = ""

################################################################################
# Url is a custom URL for a gas station
#
# Deprecated: This feature currently uses gas station which has been
# decommissioned
#
################################################################################
Url = ""

################################################################################
#  _____ _____ _   _ _______  ____  __    _    _   _    _    ____ _____ ____
# | ____|_   _| | | |_   _\ \/ /  \/  |  / \  | \ | |  / \  / ___| ____|  _ \
# |  _|   | | | |_| | | |  \  /| |\/| | / _ \ |  \| | / _ \| |  _|  _| | |_) |
# | |___  | | |  _  | | |  /  \| |  | |/ ___ \| |\  |/ ___ \ |_| | |___|  _ <
# |_____| |_| |_| |_| |_| /_/\_\_|  |_/_/   \_\_| \_/_/   \_\____|_____|_| \_\
#
################################################################################
[EthTxManager]

################################################################################
# FrequencyToMonitorTxs determines how often we'll process pending
# monitored transactions. Essentially we'll query the database looking
# for created, sent, and reorged transactions. For each one of those
# txs, we'll try to send it or confirm if it has been sent and update
# the status accordingly.
#
# Setting this duration can potentially create a lot of logs
# especially if there is nothing to do.
################################################################################
FrequencyToMonitorTxs = "5s"

################################################################################
# WaitTxToBeMined will determine how long we'll wait for a transaction
# to be mined after it's been published. If this interval is too
# short, you're more likely to run into oddities where the nonce is
# reused.
#
# The code for sending transactions does not create a goroutine. It
# will block for the duration of the wait.
################################################################################
WaitTxToBeMined = "4m0s"

################################################################################
# ForcedGas can be used to configure a default gas limit to use in the
# case of a gas estimation error. If this is configured as 0, the
# default behavior would be to return the gas estimation error and
# retry later.
################################################################################
ForcedGas = 0

################################################################################
# GasPriceMarginFactor is used to bias the gas price by whatever the
# configured factor is. If we want to make sure our transactions are
# mined quickly especially if there is volatility, we could set this
# factor to be 1.2 in order to make sure that our transactions are
# attractive.
#
# Generally, we would not recommend setting this below 1. If you're
# looking to save on gas costs, there are better ways.
################################################################################
GasPriceMarginFactor = 1

################################################################################
# MaxGasPriceLimit is used to specify in wei the upper limit price
# that we would be willing to pay. If the current gas price exceeds
# this limit, we'll adjust the gas price down to the configured limit
# and try to send the transaction. If the limit is below the base fee,
# the transaction probably would not be accepted by the RPC.
################################################################################
MaxGasPriceLimit = 0


################################################################################
# PrivateKeys is an array of keystores and passwords that are used for
# signing transactions. The keystores are standard go-ethereum style
# keystores that are encrypted with the provided password. Depending
# on your deployment setup, you'll need to configure the sequencer
# and/org aggregator key so that the tx manager for the given
# component can sign and send transactions.
#
################################################################################
[[EthTxManager.PrivateKeys]]
Path = "/etc/zkevm/sequencer.keystore"
Password = "{{.zkevm_l2_keystore_password}}"

[[EthTxManager.PrivateKeys]]
Path = "/etc/zkevm/aggregator.keystore"
Password = "{{.zkevm_l2_keystore_password}}"

################################################################################
#  ____   ___   ___  _
# |  _ \ / _ \ / _ \| |
# | |_) | | | | | | | |
# |  __/| |_| | |_| | |___
# |_|    \___/ \___/|_____|
#
################################################################################
[Pool]

################################################################################
# IntervalToRefreshBlockedAddresses determines how often we'll query
# the database in order to update the list of blocked addresses. If
# you're frequently blocking and unblocking addresses, it might make
# sense to increase the frequency.
################################################################################
IntervalToRefreshBlockedAddresses = "5m"

################################################################################
# IntervalToRefreshGasPrices determines how often we'll query the
# database for updated L1 and L2 gas prices. This number should
# probably be in line with the configured frequency for the
# L2GaspriceSuggester's update period
################################################################################
IntervalToRefreshGasPrices = "10s"

################################################################################
# MaxTxBytesSize configures the RPC limit for the max size of a
# transaction. In addition to the data, there are other fields like
# access lists that have potential to take up a lot of space.
################################################################################
MaxTxBytesSize = 100132

################################################################################
# MaxTxDataBytesSize configured how big a transaction's input / data
# field can be. This will have implications for contract deployments
# and calls.
################################################################################
MaxTxDataBytesSize = 100000

################################################################################
# DefaultMinGasPriceAllowed is used to configure a minimum allowable
# gas price in L2. When initially bootstrapping a network and
# performing the initial bridge, you'll often need to set these to be
# 0 in order to do some initial zero priced transactions.
################################################################################
DefaultMinGasPriceAllowed = 1000000000

################################################################################
# MinAllowedGasPriceInterval determines how far we'll look back when
# determining the gas price. We track gas prices over time. If the L1
# gas prices are climbing rapidly, we'll be less profitable if this
# interval is very long. If we want to be more reactive to the L1 gas
# price, this can be configured for a shorter duration.
################################################################################
MinAllowedGasPriceInterval = "5m"

################################################################################
# PollMinAllowedGasPriceInterval works in tandem with
# MinAllowedGasPriceInterval. Every period of
# PollMinAllowedGasPriceInterval we'll query our database looking back
# for a period of MinAllowedGasPriceInterval to find the min gas
# price. We'll then update the current suggested gas price in our pool
# with that value.
################################################################################
PollMinAllowedGasPriceInterval = "15s"

################################################################################
# AccountQueue determines how many non-executable transactions can be
# in the pool from a single address. If this value is configured to be
# too high relative to the size of the GlobalQueue, it becomes
# possible that a few users can fill up the entire pool. It's
# advisable to keep this particular number lower in order to avoid a
# single account filling up the entire pool and creating a DoS
################################################################################
AccountQueue = 64

################################################################################
# GlobalQueue determines how many total non-executable transactions
# can be in the pool across all account. Depending on overall
# resources and throughput requirement this number may need to be
# adjusted. It can be configured to be 0 in order to make the pool
# unlimited.
################################################################################
GlobalQueue = 1024

################################################################################
# ForkID is the current fork ID of the chain.
#
# Deprecated: In most cases the fork id is read from the chain and
# does not need to be configured like this.
################################################################################
ForkID = 0

[Pool.DB]
################################################################################
# User specifies the username for database connection authentication.
################################################################################
User = "{{.zkevm_db_pool_user}}"

################################################################################
# Password is the authentication credential for the database connection.
################################################################################
Password = "{{.zkevm_db_pool_password}}"

################################################################################
# Name is the identifier of the target database to connect to.
################################################################################
Name = "{{.zkevm_db_pool_name}}"

################################################################################
# Host is the network address (hostname or IP) used to establish a database
# connection. Append deployment-specific suffixes as needed.
################################################################################
Host = "{{.zkevm_db_pool_hostname}}{{.deployment_suffix}}"

################################################################################
# Port defines the network port used for the database connection.
################################################################################
Port = "{{.zkevm_db_postgres_port}}"

################################################################################
# EnableLog toggles the logging of all executed queries. Enabling this
# feature will significantly increase log volume and may affect performance.
################################################################################
EnableLog = false

################################################################################
# MaxConns sets the maximum number of concurrent connections in the pool.
# Adjust this value based on the database's configuration limits and expected
# client load to optimize performance and resource utilization.
################################################################################
MaxConns = 20

[Pool.EffectiveGasPrice]

################################################################################
# Enabled will determine if we use the effective gas price logic. The
# details of this feature are a bit complicated but at a high level it
# allows for additional gas savings to be passed on the user.
#
# https://github.com/0xPolygonHermez/zkevm-rom/issues/316
# https://polygon.technology/blog/polygon-zkevm-effective-gas-price-live-on-mainnet-beta
################################################################################
Enabled = false

################################################################################
# L1GasPriceFactor is used to determine the ratio of L1 to L2 gas
# prices.
################################################################################
L1GasPriceFactor = 0.25

################################################################################
# ByteGasCost is used in the effective gas price calculations and
# determines how much we should charge per non-zero byte of data
# availability
################################################################################
ByteGasCost = 16

################################################################################
# ZeroByteGasCost is used in the effective gas price calculations to
# determine how much we should charge per zero byte of data
# availability
################################################################################
ZeroByteGasCost = 4

################################################################################
# NetProfit is used in the calculation of the break even gas
# price. This factor determines how we determine our break even point.
################################################################################
NetProfit = 1

################################################################################
# BreakEvenFactor is used after the break even gas price has been
# determined. It is used to in the comparison of the signed gas price
# to determine if we should use the signed gas price or the effective
# gas price.
################################################################################
BreakEvenFactor = 1.1

################################################################################
# FinalDeviationPct is the maxed allowed difference between the break
# even gas price upon successive re-calculations
################################################################################
FinalDeviationPct = 10

################################################################################
# EthTransferGasPrice is the fixed gas price returned as effective gas
# price for txs tha are ETH transfers (0 means disabled) Only one of
# EthTransferGasPrice or EthTransferL1GasPriceFactor params can be
# different than 0. If both params are set to 0, the sequencer will
# halt and log an error
################################################################################
EthTransferGasPrice = 0

################################################################################
# EthTransferL1GasPriceFactor is the percentage of L1 gas price
# returned as effective gas price for txs tha are ETH transfers (0
# means disabled) Only one of EthTransferGasPrice or
# EthTransferL1GasPriceFactor params can be different than 0. If both
# params are set to 0, the sequencer will halt and log an error
################################################################################
EthTransferL1GasPriceFactor = 0

################################################################################
# L2GasPriceSuggesterFactor is used if the the EffectiveGasPrice
# component is not enabled but is still somehow being called to
# provide a gas price. This is likely only used in testing or
# debugging purposes.
################################################################################
L2GasPriceSuggesterFactor = 1

################################################################################
# ____  ____   ____
# |  _ \|  _ \ / ___|
# | |_) | |_) | |
# |  _ <|  __/| |___
# |_| \_\_|    \____|
#
################################################################################
[RPC]

################################################################################
# Host is the IP address that the RPC's http server will bind to.
################################################################################
Host = "0.0.0.0"

################################################################################
# Port is used to configure which port our RPC http server will listen on
################################################################################
Port = {{.zkevm_rpc_http_port}}

################################################################################
# ReadTimeout determines the maximal amount of time that a client can
# spend sending us their request. After the configured amount of time
# the RPC will drop the connection.
################################################################################
ReadTimeout = "1m0s"

################################################################################
# WriteTimeout determines how long our server is willing to spend
# writing data to the response connection. If the client is very slow,
# we can time out here and reset the connection.
################################################################################
WriteTimeout = "1m0s"

################################################################################
# MaxRequestsPerIPAndSecond is used to configure how many requests a
# single IP address can make within a single second.  These values are
# tracked on each individual server (not centrally). So if you have a
# load balance and several RPCs, it's possible that a user might be
# rate limited on just one of them
################################################################################
MaxRequestsPerIPAndSecond = 50

################################################################################
# SequencerNodeURI if configured will cause the RPC to relay certain
# requests to a different RPC. The relayed methods are:
# - eth_gasPriace
# - eth_coinbase
# - eth_syncing
# - eth_getTransactionByHash if we can't find it locally
# - eth_getTransactionCount
# - getting the pending tx count
# - sending a transaction
#
# By default the application will detect the trusted sequencer URL on
# it's own based on what ever is configured in the smart contract, but
# it's worth noting that there are some functions that read the
# configured value separately from the detected value.
################################################################################
SequencerNodeURI = ""

################################################################################
# MaxCumulativeGasUsed is used in the estimation of gas and counters
#
# Deprecated: This setting might not be needed given that we set it in
# the state.batch.constraints
################################################################################
MaxCumulativeGasUsed = 0

################################################################################
# EnableL2SuggestedGasPricePolling will enable the checking of min gas
# price. This must be enabled on order to support blocking
# transactions that have a gas price that's too low.
################################################################################
EnableL2SuggestedGasPricePolling = true

################################################################################
# BatchRequestsEnabled determines if the RPC should support an array
# of JSON RPC requests to be executed in a single batch request.
################################################################################
BatchRequestsEnabled = true

################################################################################
# BatchRequestsLimit will determine the max number of requests to be
# supported in a single batch request
################################################################################
BatchRequestsLimit = 50

################################################################################
# L2Coinbase is used to configure the response from the RPC for an
# eth_coinbase request. This will be used if the SequencerNodeURI is
# not configured. The L2Coinbase defined here is not important to the
# protocol
################################################################################
L2Coinbase = "0x0000000000000000000000000000000000000000"

################################################################################
# MaxLogsCount is a configuration to set the max number of logs that
# can be returned in a single call to the state, if zero it means no
# limit
################################################################################
MaxLogsCount = 1000

################################################################################
# MaxLogsBlockRange MaxLogsBlockRange is a configuration to set the
# max range for block number when querying TXslogs in a single call to
# the state, if zero it means no limit
################################################################################
MaxLogsBlockRange = 1000

################################################################################
# MaxNativeBlockHashBlockRange is a configuration to set the max range
# for block number when querying native block hashes in a single call
# to the state, if zero it means no limit
################################################################################
MaxNativeBlockHashBlockRange = 60000

################################################################################
# EnableHttpLog allows the user to enable or disable the logs related
# to the HTTP requests to be captured by the server.
################################################################################
EnableHttpLog = true

[RPC.WebSockets]

################################################################################
# Enabled determines if the RPC should serve websocket traffic
################################################################################
Enabled = true

################################################################################
# Host will determine which interface the web sock it bound to
################################################################################
Host = "0.0.0.0"

################################################################################
# Port specifies the port that websocket server will listen on
################################################################################
Port = {{.zkevm_rpc_ws_port}}

################################################################################
# ReadLimit will determine the max number of bytes for a message
################################################################################
ReadLimit = 104857600



################################################################################
# This section only applies to Estimation
################################################################################
[RPC.ZKCountersLimits]

################################################################################
# MaxKeccakHashes represents the maximum number of Keccak hash
# operations allowed across the Keccak state machines (Padding-KK,
# Padding-KK-Bit, Bits2Field, Keccak-F) before triggering an Out Of
# Counters (OOC) error
################################################################################
MaxKeccakHashes = 0

################################################################################
# MaxPoseidonHashes limits the total number of Poseidon hash
# computations that can be performed by the Poseidon SM during the
# processing of a batch, ensuring resource constraints are respected.
################################################################################
MaxPoseidonHashes = 0

################################################################################
# MaxPoseidonPaddings specifies the maximum number of padding
# operations the Poseidon SM can handle, typically used to align input
# sizes for hash computations.
################################################################################
MaxPoseidonPaddings = 0

################################################################################
# MaxMemAligns defines the upper limit of memory alignment operations
# that can be conducted by the Memory Align State Machine, critical
# for maintaining correct data structuring across state machines.
################################################################################
MaxMemAligns = 0

################################################################################
# MaxArithmetics sets the ceiling on the number of arithmetic
# operations (e.g., addition, multiplication, division) that the
# Arithmetic State Machine can execute, ensuring computational limits
# are adhered to.
################################################################################
MaxArithmetics = 0

################################################################################
# MaxBinaries saps the number of binary operations (like AND, OR, XOR)
# the Binary State Machine can perform, crucial for managing the
# execution resources within the zkProver framework.
################################################################################
MaxBinaries = 0

################################################################################
# MaxSteps total count of computational steps or operations the entire
# zkProver system can execute across all state machines for a single
# batch, integral to monitoring overall system load and preventing
# overuse.
################################################################################
MaxSteps = 0

################################################################################
# MaxSHA256Hashes establishes the limit on SHA256 hash operations
# performed within the system, ensuring compatibility with operations
# that might interact with external systems or need SHA256
# specifically for interoperability.
################################################################################
MaxSHA256Hashes = 0

################################################################################
#  ______   ___   _  ____ _   _ ____   ___  _   _ ___ __________ ____
# / ___\ \ / / \ | |/ ___| | | |  _ \ / _ \| \ | |_ _|__  / ____|  _ \
# \___ \\ V /|  \| | |   | |_| | |_) | | | |  \| || |  / /|  _| | |_) |
#  ___) || | | |\  | |___|  _  |  _ <| |_| | |\  || | / /_| |___|  _ <
# |____/ |_| |_| \_|\____|_| |_|_| \_\\___/|_| \_|___/____|_____|_| \_\
#
################################################################################
[Synchronizer]

################################################################################
# SyncInterval defines the wait duration between reading new
# information from the trusted sequencer, DAC, L1. Specifically, this
# controls how long we wait between running sync operations and not
# the frequence of syncs.
################################################################################
SyncInterval = "1s"

################################################################################
# SyncChunkSize determines how large of a range of blocks we'll
# attempt to pull while getting the rollup information.
################################################################################
SyncChunkSize = 100

################################################################################
# TrustedSequencerURL is the RPC url to connect to in order to sync
# the trusted state. If this value is unset, we will read the trusted
# sequencer URL from the rollup smart contract.
################################################################################
TrustedSequencerURL = ""

################################################################################
# SyncBlockProtection determines which block tag is used for reading
# data from L1. Latest would read blocks of the tip of the chain which
# have a higher risk of being reorged. Safe and final are much less
# likely to be reorged:
# https://www.alchemy.com/overviews/ethereum-commitment-levels
################################################################################
SyncBlockProtection = "safe"

################################################################################
# L1SyncCheckL2BlockHash will perform additional hash checks between a
# permissionless node and the trusted sequencer. This setting would
# add some additional querying and checking, but would help make it
# clear if for any reason the node drifts from the trusted state.
################################################################################
L1SyncCheckL2BlockHash = true

################################################################################
# L1SyncCheckL2BlockNumberhModulus sets a modulus in order to
# determine the frequency of blocks that should be checked assuming
# L1SyncCheckL2BlockHash is also enabled. E.g. if this value is set to
# 30, we'll trigger the checks every 30th L2 block.
################################################################################
L1SyncCheckL2BlockNumberhModulus = 30

################################################################################
# L1SynchronizationMode determines which mode of synchronization we
# should use. By default we use "sequential" synchronization in
# production environments. Parallel should be faster because it makes
# better utilization of the executor, but has been tested less.
################################################################################
L1SynchronizationMode = "sequential"

[Synchronizer.L1ParallelSynchronization]

################################################################################
# MaxClients determines how many workers we'll spawn in order to read
# L1 data and synchronize.
################################################################################
MaxClients = 10

################################################################################
# MaxPendingNoProcessedBlocks determines the size of the buffer used
# to store rollup information from L1. It must be greater than or
# equal to the MaxClients number. The suggested configuration is at 2x
# the number of MaxClients.
################################################################################
MaxPendingNoProcessedBlocks = 25

################################################################################
# RequestLastBlockPeriod determines how long we'll wait to request a
# new block from L1 assuming that we're already in sync.
################################################################################
RequestLastBlockPeriod = "5s"

################################################################################
# RequestLastBlockTimeout determines a maximum duration that we'll
# wait for a response when requesting a new block.
################################################################################
RequestLastBlockTimeout = "5s"

################################################################################
# RequestLastBlockMaxRetries can be used to define the max number of
# retries to request the L1 block
################################################################################
RequestLastBlockMaxRetries = 3

################################################################################
# StatisticsPeriod defines how often we should show a log with
# stats. Set this to 0 in order to disable all together.
################################################################################
StatisticsPeriod = "5m0s"

################################################################################
# TimeOutMainLoop determines how long we'll wait for the main
# synchronizer loop to complete
################################################################################
TimeOutMainLoop = "5m0s"

################################################################################
# RollupInfoRetriesSpacing determines the duration that we'll wait
# between successive retries to fetch L1 data.
################################################################################
RollupInfoRetriesSpacing = "5s"

################################################################################
# FallbackToSequentialModeOnSynchronized if true the synchronizer will
# use sequential mode once it is in sync.
################################################################################
FallbackToSequentialModeOnSynchronized = false

[Synchronizer.L1ParallelSynchronization.PerformanceWarning]

################################################################################
# AceptableInacctivityTime is the expected maximum time that the
# consumer could wait until new data is produced. If the time is
# greater it logs warning. The idea is to keep working the consumer as
# much as possible, so if the producer is not fast enough then you
# could increase the number of parallel clients to sync with L1
################################################################################
AceptableInacctivityTime = "5s"

################################################################################
# ApplyAfterNumRollupReceived configures a minimum number of processed
# events to see before processing further
################################################################################
ApplyAfterNumRollupReceived = 10

[Synchronizer.L2Synchronization]

################################################################################
# AcceptEmptyClosedBatches will enable or disable the acceptance of
# empty batches. If true, the synchronizer will accept empty batches
# and process them.
################################################################################
AcceptEmptyClosedBatches = false

################################################################################
# ReprocessFullBatchOnClose when a batch is closed, this setting will
# determine if we reprocess it or keep the trusted data.
################################################################################
ReprocessFullBatchOnClose = false

################################################################################
# CheckLastL2BlockHashOnCloseBatch if this is set to true, we'll check
# the last L2 block hash upon a batch being closed.
################################################################################
CheckLastL2BlockHashOnCloseBatch = true

################################################################################
#  ____  _____ ___  _   _ _____ _   _  ____ _____ ____
# / ___|| ____/ _ \| | | | ____| \ | |/ ___| ____|  _ \
# \___ \|  _|| | | | | | |  _| |  \| | |   |  _| | |_) |
#  ___) | |__| |_| | |_| | |___| |\  | |___| |___|  _ <
# |____/|_____\__\_\\___/|_____|_| \_|\____|_____|_| \_\
#
################################################################################
[Sequencer]

################################################################################
# DeletePoolTxsL1BlockConfirmations is used to clear old and failed
# transactions based it has been since it's failed
# (14*DeletePoolTxsL1BlockConfirmations) or how many blocks have been
# mined since the batch was virtualized
################################################################################
DeletePoolTxsL1BlockConfirmations = 100

################################################################################
# DeletePoolTxsCheckInterval determines how often we'll attempt to
# clean up the pool. In a high throughput scenario, it might be worth
# while to lower this duration to avoid doing large deletes.
################################################################################
DeletePoolTxsCheckInterval = "12h0m0s"

################################################################################
# TxLifetimeCheckInterval determines how often we'll check the current
# txs in the pool to see if they have exceeded their lifetime
################################################################################
TxLifetimeCheckInterval = "10m0s"

################################################################################
# TxLifetimeMax determines how long a non-executable transaction can
# stay in the pool before being dropped.
################################################################################
TxLifetimeMax = "3h0m0s"

################################################################################
# LoadPoolTxsCheckInterval determines how frequently the sequencer
# will check to see if there are new transactions in the pool
################################################################################
LoadPoolTxsCheckInterval = "500ms"

################################################################################
# StateConsistencyCheckInterval determines how long the sequencer will
# wait to check if a state inconsistency has developed. This is
# essentially looking for trusted_reorgs of some kind that have
# occurred while the application has been running. If such an
# inconsistency develops, the finalizer will halt requiring a cleanup
# / restart.
################################################################################
StateConsistencyCheckInterval = "5s"

[Sequencer.Finalizer]

################################################################################
# ForcedBatchesTimeout
#
################################################################################
ForcedBatchesTimeout = "1m0s"

################################################################################
# NewTxsWaitInterval
#
################################################################################
NewTxsWaitInterval = "100ms"

################################################################################
# ResourceExhaustedMarginPct
#
################################################################################
ResourceExhaustedMarginPct = 10
# ForcedBatchesL1BlockConfirmations
#

################################################################################
################################################################################
# ForcedBatchesL1BlockConfirmations
#
################################################################################
ForcedBatchesL1BlockConfirmations = 64

################################################################################
# L1InfoTreeL1BlockConfirmations
#
################################################################################
L1InfoTreeL1BlockConfirmations = 64

################################################################################
# ForcedBatchesCheckInterval
#
################################################################################
ForcedBatchesCheckInterval = "10s"

################################################################################
# L1InfoTreeCheckInterval
#
################################################################################
L1InfoTreeCheckInterval = "10s"

################################################################################
# BatchMaxDeltaTimestamp
#
################################################################################
BatchMaxDeltaTimestamp = "5s"

################################################################################
# L2BlockMaxDeltaTimestamp
#
################################################################################
L2BlockMaxDeltaTimestamp = "3s"

################################################################################
# HaltOnBatchNumber
#
################################################################################
HaltOnBatchNumber = 0

################################################################################
# SequentialBatchSanityCheck
#
################################################################################
SequentialBatchSanityCheck = false

################################################################################
# SequentialProcessL2Block
#
################################################################################
SequentialProcessL2Block = true

[Sequencer.Finalizer.Metrics]

################################################################################
# Interval
#
################################################################################
Interval = "1h0m0s"

################################################################################
# EnableLog
#
################################################################################
EnableLog = true

[Sequencer.StreamServer]

################################################################################
# Port
#
################################################################################
Port = {{.zkevm_data_streamer_port}}
# FIXME: This might be a weird path, we should probably ensure we mount to a persistent volume

################################################################################
# Filename
#
################################################################################
Filename = "/tmp/datastream.bin"

################################################################################
# Version
#
################################################################################
Version = 0

################################################################################
# ChainID
#
################################################################################
ChainID = {{.l1_chain_id}}

################################################################################
# Enabled
#
################################################################################
Enabled = true

################################################################################
# UpgradeEtrogBatchNumber
#
################################################################################
UpgradeEtrogBatchNumber = 0

[Sequencer.StreamServer.Log]

################################################################################
# Environment
#
################################################################################
Environment = "production"

################################################################################
# Level
#
################################################################################
Level = "debug"

################################################################################
#  ____  _____ ___  _   _ _____ _   _  ____ _____ ____  _____ _   _ ____  _____ ____
# / ___|| ____/ _ \| | | | ____| \ | |/ ___| ____/ ___|| ____| \ | |  _ \| ____|  _ \
# \___ \|  _|| | | | | | |  _| |  \| | |   |  _| \___ \|  _| |  \| | | | |  _| | |_) |
#  ___) | |__| |_| | |_| | |___| |\  | |___| |___ ___) | |___| |\  | |_| | |___|  _ <
# |____/|_____\__\_\\___/|_____|_| \_|\____|_____|____/|_____|_| \_|____/|_____|_| \_\
#
################################################################################
[SequenceSender]

################################################################################
# WaitPeriodSendSequence
#
################################################################################
WaitPeriodSendSequence = "5s"
# LastBatchVirtualizationTimeMaxWaitPeriod
#

################################################################################
################################################################################
# LastBatchVirtualizationTimeMaxWaitPeriod
#
################################################################################
LastBatchVirtualizationTimeMaxWaitPeriod = "5s"

################################################################################
# L1BlockTimestampMargin
#
################################################################################
L1BlockTimestampMargin = "30s"

################################################################################
# MaxTxSizeForL1
#
################################################################################
MaxTxSizeForL1 = 131072

################################################################################
# ForkUpgradeBatchNumber
#
################################################################################
ForkUpgradeBatchNumber = 0

################################################################################
# GasOffset
#
################################################################################
GasOffset = 80000

################################################################################
# MaxBatchesForL1
#
################################################################################
MaxBatchesForL1 = 300

################################################################################
# L2Coinbase
#
################################################################################
L2Coinbase = "{{.zkevm_l2_sequencer_address}}"

################################################################################
# SenderAddress
#
################################################################################
SenderAddress = "{{.zkevm_l2_sequencer_address}}"

[SequenceSender.PrivateKey]

################################################################################
# Path
#
################################################################################
Path = "/etc/zkevm/sequencer.keystore"

################################################################################
# Password
#
################################################################################
Password = "{{.zkevm_l2_keystore_password}}"

################################################################################
#     _    ____  ____ ____  _____ ____    _  _____ ___  ____
#    / \  / ___|/ ___|  _ \| ____/ ___|  / \|_   _/ _ \|  _ \
#   / _ \| |  _| |  _| |_) |  _|| |  _  / _ \ | || | | | |_) |
#  / ___ \ |_| | |_| |  _ <| |__| |_| |/ ___ \| || |_| |  _ <
# /_/   \_\____|\____|_| \_\_____\____/_/   \_\_| \___/|_| \_\
################################################################################
[Aggregator]
################################################################################
# Host
#
################################################################################
Host = "0.0.0.0"

################################################################################
# Port
#
################################################################################
Port = {{.zkevm_aggregator_port}}

################################################################################
# RetryTime
#
################################################################################
RetryTime = "5s"

################################################################################
# VerifyProofInterval
#
################################################################################
VerifyProofInterval = "5m0s"

################################################################################
# ProofStatePollingInterval
#
################################################################################
ProofStatePollingInterval = "5s"

################################################################################
# TxProfitabilityCheckerType
#
################################################################################
TxProfitabilityCheckerType = "acceptall"

################################################################################
# TxProfitabilityMinReward
#
################################################################################
TxProfitabilityMinReward = "1100000000000000000"

################################################################################
# IntervalAfterWhichBatchConsolidateAnyway
#
################################################################################
IntervalAfterWhichBatchConsolidateAnyway = "0s"

################################################################################
# ChainID
#
################################################################################
ChainID = 0

################################################################################
# ForkId
#
################################################################################
ForkId = 0

################################################################################
# CleanupLockedProofsInterval
#
################################################################################
CleanupLockedProofsInterval = "2m0s"

################################################################################
# GeneratingProofCleanupThreshold
#
################################################################################
GeneratingProofCleanupThreshold = "10m"

################################################################################
# GasOffset
#
################################################################################
GasOffset = 0

################################################################################
# UpgradeEtrogBatchNumber
#
################################################################################
UpgradeEtrogBatchNumber = 0
{{if .is_cdk_validium}}
## CDK Validium Specific Settings

################################################################################
# SenderAddress
#
################################################################################
SenderAddress = "{{.zkevm_l2_agglayer_address}}"

################################################################################
# SettlementBackend
#
################################################################################
SettlementBackend = "agglayer"

################################################################################
# AggLayerTxTimeout
#
################################################################################
AggLayerTxTimeout = "600s"

################################################################################
# AggLayerURL
#
################################################################################
AggLayerURL = "http://zkevm-agglayer{{.deployment_suffix}}:{{.zkevm_agglayer_port}}"
{{else}}

################################################################################
# SenderAddress
#
################################################################################
SenderAddress = "{{.zkevm_l2_aggregator_address}}"
{{end}}

[Aggregator.SequencerPrivateKey]

################################################################################
# Path
#
################################################################################
Path = "/etc/zkevm/sequencer.keystore"

################################################################################
# Password
#
################################################################################
Password = "{{.zkevm_l2_keystore_password}}"
# Path = "/etc/zkevm/proofsigner.keystore"
# Password = "{{.zkevm_l2_keystore_password}}"

################################################################################
#  _     _  ____    _    ____  ____  ____  ___ ____ _____
# | |   / |/ ___|  / \  / ___||  _ \|  _ \|_ _/ ___| ____|
# | |   | | |  _  / _ \ \___ \| |_) | |_) || | |   |  _|
# | |___| | |_| |/ ___ \ ___) |  __/|  _ < | | |___| |___
# |_____|_|\____/_/   \_\____/|_|   |_| \_\___\____|_____|
#  ____  _   _  ____  ____ _____ ____ _____ _____ ____
# / ___|| | | |/ ___|/ ___| ____/ ___|_   _| ____|  _ \
# \___ \| | | | |  _| |  _|  _| \___ \ | | |  _| | |_) |
#  ___) | |_| | |_| | |_| | |___ ___) || | | |___|  _ <
# |____/ \___/ \____|\____|_____|____/ |_| |_____|_| \_\
#
################################################################################
[L2GasPriceSuggester]

################################################################################
# Type
#
################################################################################
Type = "follower"

################################################################################
# DefaultGasPriceWei
#
################################################################################
DefaultGasPriceWei = 2000000000

################################################################################
# MaxGasPriceWei
#
################################################################################
MaxGasPriceWei = 0

################################################################################
# CheckBlocks
#
################################################################################
CheckBlocks = 0

################################################################################
# Percentile
#
################################################################################
Percentile = 0

################################################################################
# UpdatePeriod
#
################################################################################
UpdatePeriod = "10s"

################################################################################
# CleanHistoryPeriod
#
################################################################################
CleanHistoryPeriod = "1h0m0s"

################################################################################
# CleanHistoryTimeRetention
#
################################################################################
CleanHistoryTimeRetention = "5m0s"

################################################################################
# Factor
#
################################################################################
Factor = 0.15

################################################################################
#  _______  _______ ____ _   _ _____ ___  ____
# | ____\ \/ / ____/ ___| | | |_   _/ _ \|  _ \
# |  _|  \  /|  _|| |   | | | | | || | | | |_) |
# | |___ /  \| |__| |___| |_| | | || |_| |  _ <
# |_____/_/\_\_____\____|\___/  |_| \___/|_| \_\
#
################################################################################
[Executor]
URI = "zkevm-prover{{.deployment_suffix}}:{{.zkevm_executor_port}}"

################################################################################
# MaxResourceExhaustedAttempts
#
################################################################################
MaxResourceExhaustedAttempts = 3

################################################################################
# WaitOnResourceExhaustion
#
################################################################################
WaitOnResourceExhaustion = "1s"

################################################################################
# MaxGRPCMessageSize
#
################################################################################
MaxGRPCMessageSize = 100000000

################################################################################
#  __  __ _____ ____ _     ___ _____ _   _ _____
# |  \/  |_   _/ ___| |   |_ _| ____| \ | |_   _|
# | |\/| | | || |   | |    | ||  _| |  \| | | |
# | |  | | | || |___| |___ | || |___| |\  | | |
# |_|  |_| |_| \____|_____|___|_____|_| \_| |_|
#
################################################################################
[MTClient]

################################################################################
# URI
#
################################################################################
URI  = "zkevm-prover{{.deployment_suffix}}:{{.zkevm_hash_db_port}}"


################################################################################
#  __  __ _____ _____ ____  ___ ____ ____
# |  \/  | ____|_   _|  _ \|_ _/ ___/ ___|
# | |\/| |  _|   | | | |_) || | |   \___ \
# | |  | | |___  | | |  _ < | | |___ ___) |
# |_|  |_|_____| |_| |_| \_\___\____|____/
################################################################################
[Metrics]

################################################################################
# Host
#
################################################################################
Host = "0.0.0.0"

################################################################################
# Port
#
################################################################################
Port = {{.zkevm_prometheus_port}}

################################################################################
# Enabled
#
################################################################################
Enabled = true

################################################################################
# ProfilingHost
#
################################################################################
ProfilingHost = "0.0.0.0"

################################################################################
# ProfilingPort
#
################################################################################
ProfilingPort = {{.zkevm_pprof_port}}

################################################################################
# ProfilingEnabled
#
################################################################################
ProfilingEnabled = true

################################################################################
#  _______     _______ _   _ _____ _     ___   ____
# | ____\ \   / / ____| \ | |_   _| |   / _ \ / ___|
# |  _|  \ \ / /|  _| |  \| | | | | |  | | | | |  _
# | |___  \ V / | |___| |\  | | | | |__| |_| | |_| |
# |_____|  \_/  |_____|_| \_| |_| |_____\___/ \____|
################################################################################
[Event Log.DB]
################################################################################
# User specifies the username for database connection authentication.
################################################################################
User = "{{.zkevm_db_event_user}}"

################################################################################
# Password is the authentication credential for the database connection.
################################################################################
Password = "{{.zkevm_db_event_password}}"

################################################################################
# Name is the identifier of the target database to connect to.
################################################################################
Name = "{{.zkevm_db_event_name}}"

################################################################################
# Host is the network address (hostname or IP) used to establish a database
# connection. Append deployment-specific suffixes as needed.
################################################################################
Host = "{{.zkevm_db_event_hostname}}{{.deployment_suffix}}"

################################################################################
# Port defines the network port used for the database connection.
################################################################################
Port = "{{.zkevm_db_postgres_port}}"

################################################################################
# EnableLog toggles the logging of all executed queries. Enabling this
# feature will significantly increase log volume and may affect performance.
################################################################################
EnableLog = true

################################################################################
# MaxConns sets the maximum number of concurrent connections in the pool.
# Adjust this value based on the database's configuration limits and expected
# client load to optimize performance and resource utilization.
################################################################################
MaxConns = 20

################################################################################
#  _   _    _    ____  _   _ ____  ____
# | | | |  / \  / ___|| | | |  _ \| __ )
# | |_| | / _ \ \___ \| |_| | | | |  _ \
# |  _  |/ ___ \ ___) |  _  | |_| | |_) |
# |_| |_/_/   \_\____/|_| |_|____/|____/
#
################################################################################
[HashDB]
################################################################################
# User specifies the username for database connection authentication.
################################################################################
User = "{{.zkevm_db_prover_user}}"

################################################################################
# Password is the authentication credential for the database connection.
################################################################################
Password = "{{.zkevm_db_prover_password}}"

################################################################################
# Name is the identifier of the target database to connect to.
################################################################################
Name = "{{.zkevm_db_prover_name}}"

################################################################################
# Host is the network address (hostname or IP) used to establish a database
# connection. Append deployment-specific suffixes as needed.
################################################################################
Host = "{{.zkevm_db_prover_hostname}}{{.deployment_suffix}}"

################################################################################
# Port defines the network port used for the database connection.
################################################################################
Port = "{{.zkevm_db_postgres_port}}"

################################################################################
# EnableLog toggles the logging of all executed queries. Enabling this
# feature will significantly increase log volume and may affect performance.
################################################################################
EnableLog = false

################################################################################
# MaxConns sets the maximum number of concurrent connections in the pool.
# Adjust this value based on the database's configuration limits and expected
# client load to optimize performance and resource utilization.
################################################################################
MaxConns = 20


################################################################################
#  ____ _____  _  _____ _____
# / ___|_   _|/ \|_   _| ____|
# \___ \ | | / _ \ | | |  _|
#  ___) || |/ ___ \| | | |___
# |____/ |_/_/   \_\_| |_____|
#
################################################################################
[State]
################################################################################
# MaxCumulativeGasUsed
#
################################################################################
MaxCumulativeGasUsed = 0

################################################################################
# ChainID
#
################################################################################
ChainID = 0

################################################################################
# MaxResourceExhaustedAttempts
#
################################################################################
MaxResourceExhaustedAttempts = 0

################################################################################
# WaitOnResourceExhaustion
#
################################################################################
WaitOnResourceExhaustion = "0s"

################################################################################
# ForkUpgradeBatchNumber
#
################################################################################
ForkUpgradeBatchNumber = 0

################################################################################
# ForkUpgradeNewForkId
#
################################################################################
ForkUpgradeNewForkId = 0

################################################################################
# MaxLogsCount
#
################################################################################
MaxLogsCount = 0

################################################################################
# MaxLogsBlockRange
#
################################################################################
MaxLogsBlockRange = 0

################################################################################
# MaxNativeBlockHashBlockRange
#
################################################################################
MaxNativeBlockHashBlockRange = 0

################################################################################
# AvoidForkIDInMemory
#
################################################################################
AvoidForkIDInMemory = false

[State.DB]

################################################################################
# User specifies the username for database connection authentication.
################################################################################
User = "{{.zkevm_db_state_user}}"

################################################################################
# Password is the authentication credential for the database connection.
################################################################################
Password = "{{.zkevm_db_state_password}}"

################################################################################
# Name is the identifier of the target database to connect to.
################################################################################
Name = "{{.zkevm_db_state_name}}"

################################################################################
# Host is the network address (hostname or IP) used to establish a database
# connection. Append deployment-specific suffixes as needed.
################################################################################
Host = "{{.zkevm_db_state_hostname}}{{.deployment_suffix}}"

################################################################################
# Port defines the network port used for the database connection.
################################################################################
Port = "{{.zkevm_db_postgres_port}}"

################################################################################
# EnableLog toggles the logging of all executed queries. Enabling this
# feature will significantly increase log volume and may affect performance.
################################################################################
EnableLog = false

################################################################################
# MaxConns sets the maximum number of concurrent connections in the pool.
# Adjust this value based on the database's configuration limits and expected
# client load to optimize performance and resource utilization.
################################################################################
MaxConns = 20


# https://github.com/0xPolygonHermez/zkevm-rom/blob/main/docs/opcode-cost-zk-counters.md
# https://github.com/0xPolygonHermez/zkevm-techdocs/blob/main/knowledge-layer/architecture/PDFs/aggregator.pdf
# https://github.com/0xPolygonHermez/zkevm-proverjs/tree/main/src/sm
# https://docs.polygon.technology/zkEVM/architecture/zkprover/
[State.Batch.Constraints]

################################################################################
# MaxTxsPerBatch
#
################################################################################
MaxTxsPerBatch = 300

################################################################################
# MaxBatchBytesSize
#
################################################################################
MaxBatchBytesSize = 120000
# MaxCumulativeGasUsed
#
################################################################################

################################################################################
# MaxCumulativeGasUsed
#
################################################################################
MaxCumulativeGasUsed = 1125899906842624

################################################################################
# MaxKeccakHashes represents the maximum number of Keccak hash
# operations allowed across the Keccak state machines (Padding-KK,
# Padding-KK-Bit, Bits2Field, Keccak-F) before triggering an Out Of
# Counters (OOC) error
################################################################################
MaxKeccakHashes = 2145

################################################################################
# MaxPoseidonHashes limits the total number of Poseidon hash
# computations that can be performed by the Poseidon SM during the
# processing of a batch, ensuring resource constraints are respected.
################################################################################
MaxPoseidonHashes = 252357

################################################################################
# MaxPoseidonPaddings specifies the maximum number of padding
# operations the Poseidon SM can handle, typically used to align input
# sizes for hash computations.
################################################################################
MaxPoseidonPaddings = 135191

################################################################################
# MaxMemAligns defines the upper limit of memory alignment operations
# that can be conducted by the Memory Align State Machine, critical
# for maintaining correct data structuring across state machines.
################################################################################
MaxMemAligns = 236585

################################################################################
# MaxArithmetics sets the ceiling on the number of arithmetic
# operations (e.g., addition, multiplication, division) that the
# Arithmetic State Machine can execute, ensuring computational limits
# are adhered to.
################################################################################
MaxArithmetics = 236585

################################################################################
# MaxBinaries saps the number of binary operations (like AND, OR, XOR)
# the Binary State Machine can perform, crucial for managing the
# execution resources within the zkProver framework.
################################################################################
MaxBinaries = 473170

################################################################################
# MaxSteps total count of computational steps or operations the entire
# zkProver system can execute across all state machines for a single
# batch, integral to monitoring overall system load and preventing
# overuse.
################################################################################
MaxSteps = 7570538

################################################################################
# MaxSHA256Hashes establishes the limit on SHA256 hash operations
# performed within the system, ensuring compatibility with operations
# that might interact with external systems or need SHA256
# specifically for interoperability.
################################################################################
MaxSHA256Hashes = 1596
