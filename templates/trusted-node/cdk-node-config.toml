PathRWData = "{{.zkevm_path_rw_data}}"
L1URL="{{.l1_rpc_url}}"
L2URL="http://{{.l2_rpc_name}}{{.deployment_suffix}}:{{.zkevm_rpc_http_port}}"
AggLayerURL="{{.agglayer_url}}"

ForkId = {{.zkevm_rollup_fork_id}}
ContractVersions = "{{.zkevm_rollup_fork_name}}"
IsValidiumMode = {{.is_cdk_validium}}

L2Coinbase =  "{{.zkevm_l2_sequencer_address}}"
SequencerPrivateKeyPath = "{{or .zkevm_l2_sequencer_keystore_file "/etc/cdk/sequencer.keystore"}}"
SequencerPrivateKeyPassword  = "{{.zkevm_l2_keystore_password}}"

AggregatorPrivateKeyPath = "{{or .zkevm_l2_aggregator_keystore_file "/etc/cdk/aggregator.keystore"}}"
AggregatorPrivateKeyPassword  = "{{.zkevm_l2_keystore_password}}"
SenderProofToL1Addr = "{{.zkevm_l2_agglayer_address}}"
polygonBridgeAddr = "{{.zkevm_bridge_address}}"


RPCURL = "http://{{.l2_rpc_name}}{{.deployment_suffix}}:{{.zkevm_rpc_http_port}}"
WitnessURL = "http://{{.l2_rpc_name}}{{.deployment_suffix}}:{{.zkevm_rpc_http_port}}"

# This values can be override directly from genesis.json
rollupCreationBlockNumber = "{{.zkevm_rollup_manager_block_number}}"
rollupManagerCreationBlockNumber = "{{.zkevm_rollup_manager_block_number}}"
genesisBlockNumber = "{{.zkevm_rollup_manager_block_number}}"
[L1Config]
        chainId = "{{.l1_chain_id}}"
        polygonZkEVMGlobalExitRootAddress = "{{.zkevm_global_exit_root_address}}"
        polygonRollupManagerAddress = "{{.zkevm_rollup_manager_address}}"
        polTokenAddress = "{{.pol_token_address}}"
        polygonZkEVMAddress = "{{.zkevm_rollup_address}}"

[L2Config]
        GlobalExitRootAddr = "{{.zkevm_global_exit_root_address}}"

[Log]
Environment = "development" # "production" or "development"
Level = "{{.global_log_level}}"
Outputs = ["stderr"]

[Aggregator]
        Port = "{{.zkevm_aggregator_port}}"
        RetryTime = "30s"
        VerifyProofInterval = "10s"
        GasOffset = 150000
        SettlementBackend = "agglayer"
[RPC]
        Port = {{.zkevm_cdk_node_port}}


[AggOracle]
TargetChainType="EVM"
URLRPCL1="http://el-1-geth-lighthouse:8545"
BlockFinality="FinalizedBlock"
WaitPeriodNextGER="1s"
	[AggOracle.EVMSender]
        GlobalExitRootL2="{{.zkevm_global_exit_root_l2_address}}"
        URLRPCL2="http://cdk-erigon-rpc-001:8123" # This can be replaced with desired L2 e.g. OP Geth RPC
        ChainIDL2=2151908
        GasOffset=0
        WaitPeriodMonitorTx="1s"
        SenderAddr="0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"
                [AggOracle.EVMSender.EthTxManager]
                FrequencyToMonitorTxs = "1s"
                WaitTxToBeMined = "1s"
                GetReceiptMaxTime = "1s"
                GetReceiptWaitInterval = "1s"
                PrivateKeys = [
                        {Path = "/app/aggoracle.keystore", Password = "{{.zkevm_l2_keystore_password}}"},
                ]
                ForcedGas = 0
                GasPriceMarginFactor = 1
                MaxGasPriceLimit = 0
                PersistenceFilename = "/tmp/ethtxmanager-sequencesender.json"
                ReadPendingL1Txs = false
                SafeStatusL1NumberOfBlocks = 5
                FinalizedStatusL1NumberOfBlocks = 10
                        [AggOracle.EVMSender.EthTxManager.Etherman]
                        URL = "http://cdk-erigon-rpc-001:8123" # This can be replaced with desired L2 e.g. OP Geth RPC
                        MultiGasProvider = false
                        L1ChainID = 2151908
                        HTTPHeaders = []

[ClaimSponsor]
DBPath = "/tmp/claimsponsor"
Enabled = true
SenderAddr = "{{.zkevm_l2_claimsponsor_address}}"
BridgeAddrL2 = "{{.zkevm_bridge_l2_address}}"
MaxGas = 200000
RetryAfterErrorPeriod = "1s"
MaxRetryAttemptsAfterError = -1
WaitTxToBeMinedPeriod = "3s"
WaitOnEmptyQueue = "3s"
GasOffset = 0
	[ClaimSponsor.EthTxManager]
        FrequencyToMonitorTxs = "1s"
        WaitTxToBeMined = "2s"
        GetReceiptMaxTime = "250ms"
        GetReceiptWaitInterval = "1s"
        PrivateKeys = [
                {Path = "/app/claimsponsor.keystore", Password = "{{.zkevm_l2_keystore_password}}"},
        ]
        ForcedGas = 0
        GasPriceMarginFactor = 1
        MaxGasPriceLimit = 0
        PersistenceFilename = "/tmp/ethtxmanager-claimsponsor.json"
        ReadPendingL1Txs = false
        SafeStatusL1NumberOfBlocks = 5
        FinalizedStatusL1NumberOfBlocks = 10
                [ClaimSponsor.EthTxManager.Etherman]
                URL = "http://cdk-erigon-rpc-001:8123" # This can be replaced with desired L2 e.g. OP Geth RPC
                MultiGasProvider = false
                L1ChainID = 2151908
                HTTPHeaders = []

[LastGERSync]
DBPath = "/tmp/lastgersync"
BlockFinality = "FinalizedBlock"
InitialBlockNum = 0
GlobalExitRootL2Addr = "{{.zkevm_global_exit_root_l2_address}}"
RetryAfterErrorPeriod = "1s"
MaxRetryAttemptsAfterError = -1
WaitForNewBlocksPeriod = "1s"
DownloadBufferSize = 100

[AggSender]
CertificateSendInterval = "1m"
CheckSettledInterval = "5s"
MaxCertSize = 102760448
SaveCertificatesToFilesPath="/tmp"
StoragePath = "/tmp/aggsender.sqlite"
AggLayerURL = "{{.agglayer_url}}"
AggsenderPrivateKey = {Path = "/app/aggoracle.keystore", Password = "{{.zkevm_l2_keystore_password}}"}
URLRPCL2="http://cdk-erigon-rpc-001:8123"
BlockFinality = "FinalizedBlock"
EpochNotificationPercentage = 50
MaxRetriesStoreCertificate = 3
DelayBeetweenRetries = "60s"
KeepCertificatesHistory = true
BridgeMetadataAsHash = true
DryRun = false
EnableRPC = true

[BridgeL1Sync]
DBPath = "/tmp/bridgel1sync.sqlite"
BlockFinality = "FinalizedBlock"
InitialBlockNum = 0
BridgeAddr = "{{.zkevm_bridge_address}}"
SyncBlockChunkSize = 100
RetryAfterErrorPeriod = "1s"
MaxRetryAttemptsAfterError = -1
WaitForNewBlocksPeriod = "3s"

[BridgeL2Sync]
DBPath = "/tmp/bridgel2sync.sqlite"
BlockFinality = "FinalizedBlock"
InitialBlockNum = 0
BridgeAddr = "{{.zkevm_bridge_l2_address}}"
SyncBlockChunkSize = 100
RetryAfterErrorPeriod = "1s"
MaxRetryAttemptsAfterError = -1
WaitForNewBlocksPeriod = "3s"

[L1InfoTreeSync]
# The initial block number from which to start syncing.
# Default: 0
InitialBlock = {{.zkevm_rollup_manager_block_number}}

