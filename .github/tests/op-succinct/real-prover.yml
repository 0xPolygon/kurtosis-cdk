# This args-file deploys the OP Succinct chain.
deployment_stages:
  deploy_op_succinct: true

args:
  # Arbitrary key for the SP1 prover. This will not work if op_succinct_mock is set to false. Replace with a valid SPN key if you want to use the network provers.
  # cast wallet private-key --mnemonic "giant issue aisle success illegal bike spike question tent bar rely arctic volcano long crawl hungry vocal artwork sniff fantasy very lucky have athlete"
  # NOTE: for sp1 early version the network prover key not support '0x' prefix
  sp1_prover_key: "bcdf20249abf0ed6d944c0288fad489e33f66b3960d9e6229c1cd214ed3bbe31" # XXX: Replace with an active key

  # Valid values are: "network-prover", "mock-prover"
  agglayer_prover_primary_prover: "network-prover"
  # Valid values are: "network-prover", "mock-prover"
  aggkit_prover_primary_prover: "network-prover"
  # aggkit_prover_image: "ghcr.io/agglayer/aggkit-prover:feat-rust-proposer"
  # false = network

  # Enable real (non-mock) verifier on contracts
  zkevm_use_real_verifier: true

  consensus_contract_type: fep
  # Using the network provers will use the real SP1 verifier contract which is also deployed together in the Kurtosis devnet.
  # A mock verifier is used otherwise.
  op_succinct_mock: false
  # Enable the integration with the Agglayer
  op_succinct_agglayer: true
  # Proof type. Must match the verifier gateway contract type. Options: "plonk", "groth16", "compressed", "core"
  op_succinct_agg_proof_mode: compressed
  # The minimum interval in L2 blocks at which checkpoints must be submitted. An aggregation proof can be posted for any range larger than this interval.
  op_succinct_submission_interval: "1"
  # The maximum number of concurrent proof requests to send to the `op-succinct-server`
  op_succinct_max_concurrent_proof_requests: "1"
  # The maximum number of concurrent witness generation processes to run on the `op-succinct-server`
  op_succinct_max_concurrent_witness_gen: "1"
  # Size of the range proof.
  op_succinct_range_proof_interval: "1800"

  # OP Networks rely on L1 blocks to have finalization on L2. This means if the L1 blocktime is very fast, OP Succinct proof requests will have to bundle many L1 blocks into a single proof.
  # This will significantly increase cycles even if the L2 network is empty. Instead of having 2s, for OP Succinct deployments, we recommend 12s.
  # Note this will noticeably increase the deployment time because of the increased L1 finality.
  l1_seconds_per_slot: 12

optimism_package:
  predeployed_contracts: true
  chains:
    "001":
      # participants:
      #   node1:
      #     cl:
      #       image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-node:v1.13.5
      batcher_params:
        max_channel_duration: 50 # 50 blocks @ 12 sec => 10 minutes per blob
      proposer_params:
        enabled: false
      network_params:
        network_id: "2151908"
        seconds_per_slot: 1
  observability:
    # true = op-stack observability WITHOUT op-succinct
    # false = kurtosis-cdk observability WITH op-succinct
    enabled: false
