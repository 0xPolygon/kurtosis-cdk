name: kurtosis-post-run
description: Dump enclave and upload it as an artifact after deploying Kurtosis packages.

inputs:
  enclave_name:
    description: The name of the kurtosis enclave
    required: true
  args_filename:
    description: The name of the args file
    required: false

runs:
  using: composite
  steps:
    - name: Check if the enclave exists
      id: enclave-check
      shell: bash
      run: |
        if kurtosis enclave inspect ${{ inputs.enclave_name }}; then
          echo "ENCLAVE_EXISTS=true" >> "${GITHUB_OUTPUT}"
          echo "Enclave ${{ inputs.enclave_name }} exists."
        else
          echo "ENCLAVE_EXISTS=false" >> "${GITHUB_OUTPUT}"
          echo "Enclave ${{ inputs.enclave_name }} does not exist."
        fi

    - name: Dump enclave
      if: steps.enclave-check.outputs.ENCLAVE_EXISTS == 'true'
      shell: bash
      run: kurtosis enclave dump ${{ inputs.enclave_name }} ./dump

    - name: Generate archive name
      if: steps.enclave-check.outputs.ENCLAVE_EXISTS == 'true'
      id: archive-name
      shell: bash
      run: |
        archive_name="kurtosis_cdk_dump_${{ github.run_id }}"
        if [[ -z "${{ inputs.args_filename }}" ]]; then
          archive_name+="_without_args"
        else
          archive_name+="_with_args_${{ inputs.args_filename }}"
        fi
        echo "ARCHIVE_NAME=${archive_name}" >> "${GITHUB_OUTPUT}"
        echo "ARCHIVE_NAME=${archive_name}"

    - name: Upload enclave dump
      if: steps.enclave-check.outputs.ENCLAVE_EXISTS == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.archive-name.outputs.ARCHIVE_NAME }}
        path: ./dump

    - name: Check for stopped services
      shell: bash
      run: |
        stopped_services="$(kurtosis enclave inspect "${{ inputs.enclave_name }}" | grep STOPPED)"
        if [[ -n "${stopped_services}" ]]; then
          echo "It looks like there is at least one stopped service in the enclave... Something must have halted..."
          echo "${stopped_services}"
          echo

          kurtosis enclave inspect "${{ inputs.enclave_name }}" --full-uuids | grep STOPPED | awk '{print $2 "--" $1}' |
            while read -r container; do
              echo "Printing logs for $container"
              docker logs --tail 50 "$container"
            done
          exit 1
        else
          echo "All services are running."
        fi

    - name: Check for errors in service logs
      shell: bash
      run: |
        kurtosis enclave inspect cdk --full-uuids | grep RUNNING | grep -v "Status:" | awk '{print $2 "--" $1}' |
          while read -r container; do
            echo "Checking logs for ${container}"
            if docker logs --since 10m "${container}" 2>&1 | grep -i "error\|exception\|failed\|fatal\|ERROR\|FATA\|panic"; then
              echo "Errors found in container logs!"
            else
              echo "No errors found in logs."
            fi
            echo "------------------------------"
            echo
          done
