---
# Workflow for automatically building and deploying docker images for kurtosis-cdk.
name: Docker Image Builder

on:
  workflow_dispatch:
    inputs:
      zkevm_contracts_version:
        description: The ZkEVM contracts version tag to build (e.g., v8.1.0-rc.1-fork.13 or a commit hash)
        required: true

env:
  IMAGE_NAME: leovct/zkevm-contracts
  POLYCLI_VERSION: main

jobs:
  zkevm-contracts:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:      
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.IMAGE_BUILDER_DOCKERHUB_USERNAME }}
          password: ${{ secrets.IMAGE_BUILDER_DOCKERHUB_TOKEN }}

      - name: Determine full tag
        id: determine_tag
        run: |
          TAG=${{ github.event.inputs.zkevm_contracts_version }}
          if [[ $TAG == *-fork.10 ]]; then
            # Custom rule to label fork10 tags as fork11.
            FULL_TAG="${TAG%-fork.10}-fork.11"
          elif [[ $TAG == *pp ]]; then
            # Custom rule to label pp tags as fork12.
            FULL_TAG="${TAG}-fork.12"
          elif [[ $TAG != *-fork.[0-9]* ]]; then
            # Custom rule to label undefined tags as fork13.
            FULL_TAG="${TAG}-fork.13"
          else
            FULL_TAG=$TAG
          fi
          echo "full_tag=$FULL_TAG" >> $GITHUB_OUTPUT

      # We don't check if the image already exists to be able to push new versions of the images
      # in case of a dependency breaking change (e.g. foundry).
      - name: Build image and push to the Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: docker
          file: docker/zkevm-contracts.Dockerfile
          build-args: |
            ZKEVM_CONTRACTS_BRANCH=${{ github.event.inputs.zkevm_contracts_version }}
            POLYCLI_VERSION=${{ env.POLYCLI_VERSION }}
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ steps.determine_tag.outputs.full_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
