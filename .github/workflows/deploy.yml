---
name: Deploy Kurtosis CDK

on:
  pull_request:
  push:
    branches: [main]

concurrency:
  group: deploy-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  KURTOSIS_VERSION: 0.89.3
  GO_VERSION: 1.21
  BATCH_VERIFICATION_MONITOR_TARGET: 30
  BATCH_VERIFICATION_MONITOR_TIMEOUT: 600 # 10 minutes

jobs:
  # Deploy the CDK environment in one step, with the gas token feature enabled.
  monolithic:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: scripts/zkevm-config-diff/go.sum

      # Install tools.
      - name: Install kurtosis
        run: |
          echo "deb [trusted=yes] https://apt.fury.io/kurtosis-tech/ /" | sudo tee /etc/apt/sources.list.d/kurtosis.list
          sudo apt update
          sudo apt install kurtosis-cli=${{ env.KURTOSIS_VERSION }}
          kurtosis analytics disable

      - name: Install yq
        run: pip3 install yq

      - name: Install foundry
        uses: foundry-rs/foundry-toolchain@v1

      # Deploy components.
      - name: Enable gas token feature
        run: yq -Y --in-place '.args.zkevm_use_gas_token_contract = true' params.yml

      - name: Deploy Kurtosis CDK package
        run: kurtosis run --enclave cdk-v1 --args-file params.yml --image-download always .

      - name: Check that batches are being verified
        working-directory: ./scripts
        run: ./batch_verification_monitor.sh ${{ env.BATCH_VERIFICATION_MONITOR_TARGET }} ${{ env.BATCH_VERIFICATION_MONITOR_TIMEOUT }}

      # Compare configs.
      - name: Dump configs
        working-directory: ./scripts/zkevm-config-diff
        run: |
          mkdir -p default-configs kurtosis-cdk-configs
          sh zkevm_config.sh dump default ./default-configs
          echo
          sh zkevm_config.sh dump kurtosis-cdk ./kurtosis-cdk-configs

      - name: Compare configs
        working-directory: ./scripts/zkevm-config-diff
        run: sh zkevm_config.sh compare configs ./default-configs ./kurtosis-cdk-configs

      - name: Diff configs
        working-directory: ./scripts/zkevm-config-diff
        run: diff -r ./default-configs ./kurtosis-cdk-configs || true


  # Deploy the CDK environment incrementally, stage by stage.
  incremental:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install tools.
      - name: Install kurtosis
        run: |
          echo "deb [trusted=yes] https://apt.fury.io/kurtosis-tech/ /" | sudo tee /etc/apt/sources.list.d/kurtosis.list
          sudo apt update
          sudo apt install kurtosis-cli=${{ env.KURTOSIS_VERSION }}
          kurtosis analytics disable

      - name: Install yq
        run: pip3 install yq

      - name: Install foundry
        uses: foundry-rs/foundry-toolchain@v1

      # Deploy components.
      - name: Disable all deployment steps
        run: yq -Y --in-place 'with_entries(if .value | type == "boolean" then .value = false else . end)' params.yml

      - name: Deploy L1
        run: |
          yq -Y --in-place '.deploy_l1 = true' params.yml
          kurtosis run --enclave cdk-v1 --args-file params.yml .
          yq -Y --in-place '.deploy_l1 = false' params.yml # reset

      - name: Deploy zkEVM contracts on L1
        run: |
          yq -Y --in-place '.deploy_zkevm_contracts_on_l1 = true' params.yml
          kurtosis run --enclave cdk-v1 --args-file params.yml --image-download always .
          yq -Y --in-place '.deploy_zkevm_contracts_on_l1 = false' params.yml # reset

      - name: Deploy zkEVM node and cdk peripheral databases
        run: |
          yq -Y --in-place '.deploy_databases = true' params.yml
          kurtosis run --enclave cdk-v1 --args-file params.yml .
          yq -Y --in-place '.deploy_databases = false' params.yml # reset

      - name: Deploy CDK central environment
        run: |
          yq -Y --in-place '.deploy_cdk_central_environment = true' params.yml
          kurtosis run --enclave cdk-v1 --args-file params.yml .
          yq -Y --in-place '.deploy_cdk_central_environment = false' params.yml # reset

      - name: Deploy CDK bridge infrastructure
        run: |
          yq -Y --in-place '.deploy_cdk_bridge_infra = true' params.yml
          kurtosis run --enclave cdk-v1 --args-file params.yml .
          yq -Y --in-place '.deploy_cdk_bridge_infra = false' params.yml # reset

      - name: Deploy zkEVM permissionless node
        run: |
          yq -Y --in-place '.deploy_zkevm_permissionless_node = true' params.yml
          kurtosis run --enclave cdk-v1 --args-file params.yml .
          yq -Y --in-place '.deploy_zkevm_permissionless_node = false' params.yml # reset

      - name: Deploy observability stack
        run: |
          yq -Y --in-place '.deploy_observability = true' params.yml
          kurtosis run --enclave cdk-v1 --args-file params.yml .
          yq -Y --in-place '.deploy_observability = false' params.yml # reset

      - name: Deploy Blockscout stack
        run: |
          yq -Y --in-place '.deploy_l2_blockscout = true' params.yml
          kurtosis run --enclave cdk-v1 --args-file params.yml .
          yq -Y --in-place '.deploy_l2_blockscout = false' params.yml # reset

      - name: Deploy ETH load balancer
        run: |
          yq -Y --in-place '.deploy_blutgang = true' params.yml
          kurtosis run --enclave cdk-v1 --args-file params.yml .
          yq -Y --in-place '.deploy_blutgang = false' params.yml # reset

      - name: Apply workload
        run: |
          yq -Y --in-place '.apply_workload = true' params.yml
          kurtosis run --enclave cdk-v1 --args-file params.yml .
          yq -Y --in-place '.apply_workload = false' params.yml # reset

      - name: Check that batches are being verified
        working-directory: ./scripts
        run: ./batch_verification_monitor.sh ${{ env.BATCH_VERIFICATION_MONITOR_TARGET }} ${{ env.BATCH_VERIFICATION_MONITOR_TIMEOUT }}


  # Deploy the CDK environment without specifying any parameter file.
  configless:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install tools.
      - name: Install kurtosis
        run: |
          echo "deb [trusted=yes] https://apt.fury.io/kurtosis-tech/ /" | sudo tee /etc/apt/sources.list.d/kurtosis.list
          sudo apt update
          sudo apt install kurtosis-cli=${{ env.KURTOSIS_VERSION }}
          kurtosis analytics disable

      - name: Install foundry
        uses: foundry-rs/foundry-toolchain@v1

      # Deploy components.
      - name: Deploy Kurtosis CDK package
        run: kurtosis run --enclave cdk-v1 --image-download always .

      - name: Check that batches are being verified
        working-directory: ./scripts
        run: ./batch_verification_monitor.sh ${{ env.BATCH_VERIFICATION_MONITOR_TARGET }} ${{ env.BATCH_VERIFICATION_MONITOR_TIMEOUT }}

  # Deploy the CDK environment against a local l1 chain with pre-deployed zkevm contracts.
  pre-deployed-contracts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install tools.
      - name: Install kurtosis
        run: |
          echo "deb [trusted=yes] https://apt.fury.io/kurtosis-tech/ /" | sudo tee /etc/apt/sources.list.d/kurtosis.list
          sudo apt update
          sudo apt install kurtosis-cli=${{ env.KURTOSIS_VERSION }}
          kurtosis analytics disable

      - name: Install yq
        run: pip3 install yq

      - name: Install foundry
        uses: foundry-rs/foundry-toolchain@v1

      # Deploy components.
      - name: Deploy L1 and zkEVM contracts
        run: |
          # Disable all deployment steps.
          yq -Y --in-place 'with_entries(if .value | type == "boolean" then .value = false else . end)' params.yml
          # Only deploy l1 and zkevm contracts.
          yq -Y --in-place '(.deploy_l1 = true) | (.deploy_zkevm_contracts_on_l1 = true)' params.yml

          kurtosis run --enclave cdk-v1 --args-file params.yml --image-download always .

      - name: Specify the rollup manager contract address and a few other parameters
        run: |
          zkevm_rollup_manager_address=$(kurtosis service exec cdk-v1 contracts-001 "cat /opt/zkevm/combined.json" | tail -n +2 | jq .polygonRollupManagerAddress)
          yq -Y --in-place ".args.zkevm_rollup_manager_address = $zkevm_rollup_manager_address" params.yml

          zkevm_rollup_manager_block_number=$(kurtosis service exec cdk-v1 contracts-001 "cat /opt/zkevm/combined.json" | tail -n +2 | jq .deploymentRollupManagerBlockNumber)
          yq -Y --in-place ".args.zkevm_rollup_manager_block_number = $zkevm_rollup_manager_block_number" params.yml

          zkevm_global_exit_root_l2_address=$(kurtosis service exec cdk-v1 contracts-001 "cat /opt/zkevm/combined.json" | tail -n +2 | jq .polygonZkEVMGlobalExitRootL2Address)
          yq -Y --in-place ".args.zkevm_global_exit_root_l2_address = $zkevm_global_exit_root_l2_address" params.yml

          polygon_data_committee_address=$(kurtosis service exec cdk-v1 contracts-001 "cat /opt/zkevm/combined.json" | tail -n +2 | jq .polygonDataCommitteeAddress)
          yq -Y --in-place ".args.polygon_data_committee_address = $polygon_data_committee_address" params.yml

      - name: Deploy the rest of the components
        run: |
          # Enable all deployment steps.
          yq -Y --in-place 'with_entries(if .value | type == "boolean" then .value = true else . end)' params.yml
          # Do not deploy l1 and zkevm contracts.
          yq -Y --in-place '(.deploy_l1 = false) | (.deploy_zkevm_contracts_on_l1 = false)' params.yml

          kurtosis run --enclave cdk-v1 --args-file params.yml --image-download always .

  # Deploy the CDK environment in rollup mode (data availability).
  # By default the da mode is set to validium.
  rollup-data-availability-mode:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install tools.
      - name: Install kurtosis
        run: |
          echo "deb [trusted=yes] https://apt.fury.io/kurtosis-tech/ /" | sudo tee /etc/apt/sources.list.d/kurtosis.list
          sudo apt update
          sudo apt install kurtosis-cli=${{ env.KURTOSIS_VERSION }}
          kurtosis analytics disable

      - name: Install foundry
        uses: foundry-rs/foundry-toolchain@v1

      # Deploy components.
      - name: Set rollup data availability mode
        run: yq -Y --in-place '.args.data_availability_mode = rollup' params.yml

      - name: Deploy Kurtosis CDK package
        run: kurtosis run --enclave cdk-v1 --image-download always .

      - name: Check that batches are being verified
        working-directory: ./scripts
        run: ./batch_verification_monitor.sh ${{ env.BATCH_VERIFICATION_MONITOR_TARGET }} ${{ env.BATCH_VERIFICATION_MONITOR_TIMEOUT }}
