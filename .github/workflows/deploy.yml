---
# Basic deployment workflow.
# Note that more advanced use cases are tested in the nightly workflow.
name: Deploy

on:
  pull_request:
  push:
    branches: [main]

concurrency:
  group: deploy-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  ENCLAVE_NAME: cdk

jobs:
  cdk:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - name: Install Kurtosis CDK tools
        uses: ./.github/actions/setup-kurtosis-cdk

      # Deploy the CDK environment with cdk-erigon, serving as the sequencer.
      # Set up the cdk-node for the remaining components.
      # Additionally, deploy cdk-erigon and zkevm-node as permissionless nodes or RPCs.
      - name: Deploy Kurtosis CDK package
        run: |
          kurtosis run \
            --enclave=${{ env.ENCLAVE_NAME }} \
            --show-enclave-inspect=false \
            --args-file=params.yml \
            . \
            '{
              "deploy_cdk_erigon_node": true,
              "apply_workload": true,
              "args": {
                "sequencer_type": "erigon",
                "l1_seconds_per_slot": 1,
                "additional_services": [
                  "zkevm-pless-node"
                ]
              }
            }'

      - name: Inspect enclave
        run: kurtosis enclave inspect ${{ env.ENCLAVE_NAME }}

      - name: Monitor verified batches (CDK Erigon Permissionless RPC)
        working-directory: .github/scripts
        run: ./monitor-verified-batches.sh --rpc-url "$(kurtosis port print ${{ env.ENCLAVE_NAME }} cdk-erigon-node-001 http-rpc)"

      - name: Monitor verified batches (zkEVM Node Permissionless RPC)
        working-directory: .github/scripts
        run: ./monitor-verified-batches.sh --rpc-url "$(kurtosis port print ${{ env.ENCLAVE_NAME }} zkevm-node-rpc-pless-001 http-rpc)"

  zkevm:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - name: Install Kurtosis CDK tools
        uses: ./.github/actions/setup-kurtosis-cdk

      # Deploy the CDK environment with zkevm-node, serving as the sequencer.
      # Also set up the zkevm-node for the remaining components.
      # Additionally, deploy zkevm-node as permissionless node or RPC.
      - name: Deploy Kurtosis CDK package
        run: |
          kurtosis run \
            --enclave=${{ env.ENCLAVE_NAME }} \
            --show-enclave-inspect=false \
            --args-file=params.yml \
            . \
            '{
              "deploy_cdk_erigon_node": false,
              "apply_workload": true,
              "args": {
                "sequencer_type": "zkevm",
                "l1_seconds_per_slot": 1,
                "additional_services": [
                  "zkevm_pless_node"
                ]
              }
            }'

      - name: Inspect enclave
        run: kurtosis enclave inspect ${{ env.ENCLAVE_NAME }}

      - name: Monitor verified batches (zkEVM Node Trusted RPC)
        working-directory: .github/scripts
        run: ./monitor-verified-batches.sh --rpc-url "$(kurtosis port print ${{ env.ENCLAVE_NAME }} zkevm-node-rpc-001 http-rpc)"

      - name: Monitor verified batches (zkEVM Node Permissionless RPC)
        working-directory: .github/scripts
        run: ./monitor-verified-batches.sh --rpc-url "$(kurtosis port print ${{ env.ENCLAVE_NAME }} zkevm-node-rpc-pless-001 http-rpc)"

      # TODO(nit): Deploy a CDK Erigon Permissionless RPC and check that it can sync.
